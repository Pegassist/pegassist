{"version":3,"sources":["api/index.ts","config.ts","hooks/index.ts","App/AppMenu/index.tsx","components/StepsProgress.tsx","App/SideMenu/index.tsx","App/Step1/SpacerError.jsx","App/Step1/Step1Form.tsx","api/events.ts","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptionsDropDown.tsx","App/Step2/Step2Form.tsx","App/Step2/Submit.tsx","App/Step2/index.tsx","App/Step3/Statistic.tsx","App/Step3/RTTemplates.tsx","App/Step3/PBSOptions.tsx","App/Step3/Step3Form.tsx","App/Step3/Submit.tsx","App/Step3/PegRNAWarnings.jsx","App/Step3/index.tsx","App/Step4/PE3Options.tsx","App/Step4/Step4Form.tsx","App/Step4/Submit.tsx","App/Step4/Pe3Warnings.jsx","App/Step4/index.tsx","App/Step5/FullResultsButton.tsx","components/Copy.tsx","App/Step5/CloningStrategyDropdown.tsx","App/Step5/PegRNA.tsx","App/Step5/Pe3sgRNA.tsx","App/Step5/SpacersgRNA.tsx","App/Step5/index.tsx","App/About/index.tsx","App/GettingStarted/index.tsx","App/index.tsx","index.tsx"],"names":["mixpanel","init","generateTemplateOptions","wtSeq","mut","spacer","pam","minPbs","maxPbs","minRt","maxRt","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","generateSpacerSgRNA","generateSpacers","spacerOptions","generateWarnings","generateCSV","text","responseText","url","window","URL","createObjectURL","Blob","link","document","createElement","id","href","setAttribute","headers","get","appendChild","click","elem","querySelector","parentNode","removeChild","trackEvent","event","track","getGlobalState","customSpacer","selectedTemplateOption","rt","selectedSpacerOption","selectedPbsOption","selectedPe3Option","secondGuide","selectedPe3OptionType","type","cleanWtSeq","cleanMutSeq","pegRNA","sequence","pe3sgRNASense","sense","pe3sgRNAAntiSense","antisense","createGlobalState","menuTab","templateOptions","pbsOptions","pe3Options","step","pe3sgRNA","spacersgRNA","warnings","general","pegRna","spacerError","step2Loading","step3Loading","step4Loading","step5Loading","cloningStrategy","step3Advanced","useGlobalState","useSequencePredictions","setTemplateOptions","setWtSeq","setMut","setSpacer","setPam","setMinPbs","setMaxPbs","setMinRt","setMaxRt","setPBSOptions","setPe3Options","setPegRNA","setPe3sgRNA","setSpacersgRNA","setSelectedSpacerOption","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setWarnings","toUpperCase","length","pamStart","cutPE3","cutDiff","rcSecondGuide","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","globalSelectedPe3Option","sgRNA","updateSelectedTemplateOption","option","updateSelectedPbsOption","updateSelectedPe3Option","updateSequencePredictions","useWtSeq","useMut","usePam","useMinPbs","useMaxPbs","useMinRt","useMaxRt","useSpacerOptions","setSpacerOptions","useSpacerError","setSpacerError","useStep","setStep","useStep3Loading","setStep3Loading","useStep4Loading","setStep4Loading","useStep5Loading","setStep5Loading","useCloningStrategy","setCloningStrategy","useStep3Advanced","setStep3Advanced","useMenuTab","setMenuTab","navCallback","tab","AppMenu","Menu","secondary","pointing","style","position","top","left","width","backgroundColor","zIndex","marginBottom","paddingLeft","Item","name","active","onClick","as","onClickFactory","target","getElementById","scrollIntoView","block","behavior","Steps","vertical","Step","Group","ordered","size","completed","Content","Description","disabled","SideMenu","className","alt","src","display","justifyContent","StepsProgress","SpacerError","Message","warning","MessageHeader","SubmitForm","state","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","parseInt","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Divider","Button","content","loading","primary","basic","Component","submit","Submit","setCustomSpacer","useCustomSpacer","setStep2Loading","useStep2Loading","finalSpacerOptions","customSpacerOption","cutToMut","quality","apiSpacerOptions","Events","setTimeout","nextStep","Step1Form","Step1","height","Grid","Row","Column","Segment","color","undefined","SequenceOptionsDropdown","options","_","title","Dropdown","map","o","key","selection","scrolling","defaultProps","onChangeFactory","Step2Form","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","events","Step2","Statistic","margin","renderValue","find","t","RTTemplates","fhr","fhrGC","fhrLength","rtLength","rtPolyT","rtTM","PbsOptions","p","PBSOptions","pbsGC","pbsPolyT","pbsTM","handleAdvancedToggleFactory","Step3Form","flexGrow","paddingRight","PegRNAWarnings","i","PE3OptionsDropdownAvatar","selectedOption","filter","image","PE3Options","Step4Form","Pe3Warnings","FullResultsButton","Copy","helpText","isOpen","handleCopy","copy","console","log","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","handleChangeFactory","CloningStrategyDropdown","defaultValue","getSequence","annotations","join","getCloningStrategyAnnotations","includes","PegRNA","usePegRNA","seen","Set","item","k","has","add","uniqBy","marginTop","flexDirection","right","annotation","borderRadius","marginLeft","marginRight","wordBreak","padding","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","SpacersgRNA","Step5","AboutContent","AboutContainer","GettingStartedContent","App","overflow","centered","Step3","Step4","About","GettingStarted","ReactDOM","render","StrictMode"],"mappings":"mSAIAA,IAASC,KCDmB,oCDGrB,IAAMC,EAAuB,uCAAG,WACrCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARqC,eAAAC,EAAA,sEAUnBC,MAAM,GAAD,OCf4C,GDe5C,gBAA4B,CACjDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApBiC,cAU/BO,EAV+B,gBAuBxBA,EAAIC,OAvBoB,mFAAH,oEA0BvBC,EAAgC,uCAAG,WAC9ChB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAR8C,eAAAC,EAAA,sEAU5BC,MAAM,GAAD,OCzC4C,GDyC5C,iBAA6B,CAClDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApB0C,cAUxCO,EAVwC,gBAuBjCA,EAAIC,OAvB6B,mFAAH,oEA0BhCE,EAAkB,uCAAG,WAChCjB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARgC,eAAAC,EAAA,sEAUdC,MAAM,GAAD,OCnE4C,GDmE5C,iBAA6B,CAClDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApB4B,cAU1BO,EAV0B,gBAuBnBA,EAAIC,OAvBe,mFAAH,oEA0BlBG,EAAc,uCAAG,WAC5BlB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAR4B,eAAAC,EAAA,sEAUVC,MAAM,GAAD,OC7F4C,GD6F5C,oBAAgC,CACrDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApBwB,cAUtBO,EAVsB,gBAuBfA,EAAIC,OAvBW,mFAAH,oEA0BdI,EAAkB,uCAAG,WAChCnB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARgC,eAAAC,EAAA,sEAUdC,MAAM,GAAD,OCvH4C,GDuH5C,wBAAoC,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApB4B,cAU1BO,EAV0B,gBAuBnBA,EAAIC,OAvBe,mFAAH,oEA0BlBK,EAAc,uCAAG,WAC5BlB,EACAmB,EACAC,GAH4B,eAAAd,EAAA,sEAKVC,MAAM,GAAD,OC5I4C,GD4I5C,oBAAgC,CACrDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,SAAQmB,MAAKC,UAPV,cAKtBR,EALsB,gBASfA,EAAIC,OATW,mFAAH,0DAYdQ,EAAa,uCAAG,WAAOC,GAAP,eAAAhB,EAAA,sEACTC,MAAM,GAAD,OCpJ4C,GDoJ5C,mBAA+B,CACpDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEW,UAHE,cACrBV,EADqB,gBAKdA,EAAIC,OALU,mFAAH,sDAQbU,EAAmB,uCAAG,WAAOvB,GAAP,eAAAM,EAAA,sEACfC,MAAM,GAAD,OC5J4C,GD4J5C,0BAAsC,CAC3DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEX,SAAQF,MAAO,GAAIC,IAAK,OAHhB,cAC3Ba,EAD2B,gBAKpBA,EAAIC,OALgB,mFAAH,sDAQnBW,EAAe,uCAAG,WAC7B1B,EACAC,EACAE,GAH6B,iBAAAK,EAAA,sEAKXC,MAAM,GAAD,OCxK4C,GDwK5C,qBAAiC,CACtDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,OAAQ,GACRC,UAXyB,cAKvBW,EALuB,gBAceA,EAAIC,OAdnB,cAcvBY,EAduB,yBAetBA,GAfsB,2CAAH,0DAkBfC,EAAgB,uCAAG,WAC9B5B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAR8B,eAAAC,EAAA,sEAUZC,MAAM,GAAD,OC/L4C,GD+L5C,sBAAkC,CACvDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApB0B,cAUxBO,EAVwB,gBAuBjBA,EAAIC,OAvBa,mFAAH,oEA0BhBc,EAAW,uCAAG,WACzB7B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARyB,uBAAAC,EAAA,sEAUPC,MAAM,GAAD,OCzN4C,GDyN5C,iBAA6B,CAClDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBb,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,YApBqB,cAUnBO,EAVmB,gBAuBEA,EAAIgB,OAvBN,OAuBnBC,EAvBmB,OAwBnBC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACL,MAC3CM,EAAOC,SAASC,cAAc,MAC/BC,GAAK,WACVH,EAAKI,KAAOT,EACZK,EAAKK,aAAa,WAAY5B,EAAI6B,QAAQC,IAAI,aAAe,cAC7DN,SAAS3B,KAAKkC,YAAYR,GAC1BA,EAAKS,SAECC,EAAOT,SAASU,cAAc,eAExBD,EAAKE,YACfF,EAAKE,WAAWC,YAAYH,GAnCL,4CAAH,oEAuCXI,EAAa,SAACC,GAAmB,IAAD,gBAC3CvD,IAASwD,MAAMD,EAAO,CACpBpD,MAAOsD,EAAe,SACtBrD,IAAKqD,EAAe,OACpBpD,OAAQoD,EAAe,UACvBC,aAAcD,EAAe,gBAC7BnD,IAAKmD,EAAe,OACpBlD,OAAQkD,EAAe,UACvBjD,OAAQiD,EAAe,UACvBhD,MAAOgD,EAAe,SACtB/C,MAAO+C,EAAe,SACtBE,uBAAsB,UAAEF,EAAe,iCAAjB,aAAE,EAA0CG,GAClEC,qBAAoB,UAAEJ,EAAe,+BAAjB,aAAE,EAAwCpD,OAC9DyD,kBAAiB,UAAEL,EAAe,4BAAjB,aAAE,EAAqChC,IACxDsC,kBAAiB,UAAEN,EAAe,4BAAjB,aAAE,EAAqCO,YACxDC,sBAAqB,UAAER,EAAe,4BAAjB,aAAE,EAAqCS,KAC5DC,WAAYV,EAAe,cAC3BW,YAAaX,EAAe,eAC5BY,OAAM,UAAEZ,EAAe,iBAAjB,aAAE,EAA0Ba,SAClCC,cAAa,UAAEd,EAAe,mBAAjB,aAAE,EAA4Be,MAC3CC,kBAAiB,UAAEhB,EAAe,mBAAjB,aAAE,EAA4BiB,a,WEjNDC,YAvChB,CAChCC,QAAS,OACTzE,MAAO,GACPC,IAAK,GACLC,OAAQ,GACRqD,aAAc,GACdpD,IAAK,MACLC,OAAQ,EACRC,OAAQ,GACRC,MAAO,EACPC,MAAO,GACPmE,gBAAiB,GACjBlB,uBAAwB,KACxB7B,cAAe,GACf+B,qBAAsB,KACtBiB,WAAY,GACZhB,kBAAmB,KACnBiB,WAAY,GACZhB,kBAAmB,KACnBI,WAAY,GACZC,YAAa,GACbY,KAAM,EACNX,OAAQ,KACRY,SAAU,CAAET,MAAO,GAAIE,UAAW,IAClCQ,YAAa,CAAEV,MAAO,GAAIE,UAAW,IACrCS,SAAU,CACRC,QAAS,GACTC,OAAQ,GACR1D,IAAK,IAEP2D,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,gBAAiB,mCACjBC,eAAe,IAGFC,E,EAAAA,eAAgBpC,E,EAAAA,eAIxB,SAASqC,IAA0B,IAAD,EACOD,EAC5C,mBAFqC,mBAChChB,EADgC,KACfkB,EADe,OAKbF,EAAe,SALF,mBAKhC1F,EALgC,KAKzB6F,EALyB,OAMjBH,EAAe,OANE,mBAMhCzF,EANgC,KAM3B6F,EAN2B,OAOXJ,EAAe,UAPJ,mBAOhCxF,EAPgC,KAOxB6F,EAPwB,OASjBL,EAAe,OATE,mBAShCvF,EATgC,KAS3B6F,EAT2B,OAUXN,EAAe,UAVJ,mBAUhCtF,EAVgC,KAUxB6F,EAVwB,OAWXP,EAAe,UAXJ,mBAWhCrF,EAXgC,KAWxB6F,EAXwB,OAYbR,EAAe,SAZF,mBAYhCpF,EAZgC,KAYzB6F,EAZyB,OAabT,EAAe,SAbF,mBAahCnF,EAbgC,KAazB6F,EAbyB,OAeHV,EAAe,cAfZ,mBAehCf,EAfgC,KAepB0B,EAfoB,OAgBHX,EAAe,cAhBZ,oBAgBhCd,GAhBgC,MAgBpB0B,GAhBoB,SAiBXZ,EAAe,UAjBJ,qBAiBhCxB,GAjBgC,MAiBxBqC,GAjBwB,SAkBPb,EAAe,YAlBR,qBAkBhCZ,GAlBgC,MAkBtB0B,GAlBsB,SAmBDd,EAAe,eAnBd,qBAmBhCX,GAnBgC,MAmBnB0B,GAnBmB,SAoBiBf,EACtD,wBArBqC,qBAoBhChC,GApBgC,MAoBVgD,GApBU,SAuBqBhB,EAC1D,0BAxBqC,qBAuBhClC,GAvBgC,MAuBRmD,GAvBQ,SA0BWjB,EAChD,qBA3BqC,qBA0BhC/B,GA1BgC,MA0BbiD,GA1Ba,SA6BWlB,EAChD,qBA9BqC,qBA6BhC9B,GA7BgC,MA6BbiD,GA7Ba,SAgCPnB,EAAe,YAhCR,qBAgChCV,GAhCgC,MAgCtB8B,GAhCsB,oDAkCvC,WACE9G,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARF,eAAAC,EAAA,kEAUEoF,EAVF,SAWU7F,EACJC,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GAnBN,8CAuBEuG,GAvBF,SAwBUlF,EACJ5B,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GAhCN,yCAoCEsF,EAAS7F,EAAM+G,eACfjB,EAAO7F,EAAI8G,eACXhB,EAAU7F,EAAO6G,eAEjBf,EAAO7F,EAAI4G,eACXd,EAAU7F,GACV8F,EAAU7F,GACV8F,EAAS7F,GACT8F,EAAS7F,GAEL+C,EAAe,mBAAmB0D,OAAS,GAC7CL,GAA0BrD,EAAe,mBAAmB,IA/ChE,KAiDE+C,EAjDF,UAkDUrF,EACJhB,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GA1DN,0CA6DM+C,EAAe,cAAc0D,OAAS,GACxCJ,GAAqBtD,EAAe,cAAc,IA9DtD,UAgEwCrC,EACpCjB,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GAxEJ,QAgEQqE,EAhER,OA0EE0B,GAAc,GAAD,mBACR1B,GADQ,CAEX,CACEqC,SAAU,EACVC,OAAQ,EACRC,QAAS,EACTtD,YAAa,OACbuD,cAAe,OACfrD,KAAM,WAGNT,EAAe,cAAc0D,OAAS,GACxCH,GAAqBvD,EAAe,cAAc,IAGpD+D,KACAC,KA1FF,6CAlCuC,+BA+HxBD,KA/HwB,8EA+HvC,kCAAA7G,EAAA,yDACQ+G,EAAejE,EAAe,UAC9BkE,EAA+BlE,EACnC,0BAEImE,EAA0BnE,EAAe,sBAC3CkE,IAAgCC,EANtC,gCAOyBrG,EACnBmG,EAAaR,cACbS,EAA6B/D,GAAGsD,cAChCU,EAAwBnG,IAAIyF,eAVlC,OAOU7C,EAPV,OAYIqC,GAAUrC,GAZd,4CA/HuC,+BA8JxBoD,KA9JwB,8EA8JvC,kCAAA9G,EAAA,yDACQkH,EAA0BpE,EAAe,qBACzCiE,EAAejE,EAAe,WAChCoE,EAHN,gCAIwBnG,EAClBmG,EAAwB7D,YAAYkD,eAL1C,OAIUY,EAJV,OAOInB,GAAYmB,GAPhB,uBAU4BlG,EAAoB8F,GAVhD,OAUQxC,EAVR,OAWE0B,GAAe1B,GAXjB,6CA9JuC,sBA4KvC,MAAO,CACL/E,QACAC,MACAC,SACAC,MACAC,SACAC,SACAC,QACAC,QACAmE,kBACAC,aACAhB,qBACAiB,cACAV,UACAY,YACAC,eACAC,YACAe,YACAvC,0BACAI,qBACAgE,6BAjDF,SAAsCC,GACpClB,GAA0BkB,GAC1BR,MAgDAS,wBA7CF,SAAiCD,GAC/BjB,GAAqBiB,GACrBR,MA4CAU,wBAzCF,SAAiCF,GAC/BhB,GAAqBgB,GACrBP,MAwCAU,0BAnMqC,2DAoMrCX,gBACAC,eACA5D,wBACAgD,4BA+DG,SAASuB,IAAY,IAAD,EACCvC,EAAe,SADhB,mBAGzB,MAAO,CACL1F,MAJuB,KAKvB6F,SALuB,MASpB,SAASqC,IAAU,IAAD,EACDxC,EAAe,OADd,mBAGvB,MAAO,CACLzF,IAJqB,KAKrB6F,OALqB,MAkBlB,SAASqC,IAAU,IAAD,EACDzC,EAAe,OADd,mBAGvB,MAAO,CACLvF,IAJqB,KAKrB6F,OALqB,MASlB,SAASoC,IAAa,IAAD,EACE1C,EAAe,UADjB,mBAG1B,MAAO,CACLtF,OAJwB,KAKxB6F,UALwB,MASrB,SAASoC,IAAa,IAAD,EACE3C,EAAe,UADjB,mBAG1B,MAAO,CACLrF,OAJwB,KAKxB6F,UALwB,MASrB,SAASoC,IAAY,IAAD,EACC5C,EAAe,SADhB,mBAGzB,MAAO,CACLpF,MAJuB,KAKvB6F,SALuB,MASpB,SAASoC,IAAY,IAAD,EACC7C,EAAe,SADhB,mBAGzB,MAAO,CACLnF,MAJuB,KAKvB6F,SALuB,MASpB,SAASoC,IAAoB,IAAD,EACS9C,EAAe,iBADxB,mBAGjC,MAAO,CACL/D,cAJ+B,KAK/B8G,iBAL+B,MA2B5B,SAASC,IAAkB,IAAD,EACOhD,EAAe,eADtB,mBAE/B,MAAO,CACLP,YAH6B,KAI7BwD,eAJ6B,MAQ1B,SAASC,IAAW,IAAD,EACAlD,EAAe,QADf,mBAExB,MAAO,CACLb,KAHsB,KAItBgE,QAJsB,MAgBnB,SAASC,IAAmB,IAAD,EACQpD,EAAe,gBADvB,mBAEhC,MAAO,CACLL,aAH8B,KAI9B0D,gBAJ8B,MAO3B,SAASC,IAAmB,IAAD,EACQtD,EAAe,gBADvB,mBAEhC,MAAO,CACLJ,aAH8B,KAI9B2D,gBAJ8B,MAQ3B,SAASC,IAAmB,IAAD,EACQxD,EAAe,gBADvB,mBAEhC,MAAO,CACLH,aAH8B,KAI9B4D,gBAJ8B,MAQ3B,SAASC,IAAsB,IAAD,EACW1D,EAC5C,mBAFiC,mBAInC,MAAO,CACLF,gBALiC,KAMjC6D,mBANiC,MAU9B,SAASC,IAAoB,IAAD,EACS5D,EAAe,iBADxB,mBAEjC,MAAO,CACLD,cAH+B,KAI/B8D,iBAJ+B,MAQ5B,SAASC,IAAc,IAAD,EACG9D,EAAe,WADlB,mBAE3B,MAAO,CACLjB,QAHyB,KAIzBgF,WAJyB,MCne7B,SAASC,EACPC,EACAF,GAEAA,EAAWE,GA0Bb,IAqCeC,EArCC,WAAO,IAAD,EACYJ,IAAxB/E,EADY,EACZA,QAASgF,EADG,EACHA,WACjB,OACE,kBAACI,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRC,MAAO,CACLC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,QACPC,gBAAiB,UACjBC,OAAQ,EACRC,aAAc,EACdC,YAAa,KAGf,kBAACX,EAAA,EAAKY,KAAN,CACEC,KAAK,OACLC,OAAoB,SAAZlG,EACRmG,QAAS,kBAAMlB,EAAY,OAAQD,IACnCoB,GAAG,OAEL,kBAAChB,EAAA,EAAKY,KAAN,CACEC,KAAK,QACLC,OAAoB,UAAZlG,EACRmG,QAAS,kBAAMlB,EAAY,QAASD,MAEtC,kBAACI,EAAA,EAAKY,KAAN,CACEC,KAAK,kBACLC,OAAoB,oBAAZlG,EACRmG,QAAS,kBAAMlB,EAAY,kBAAmBD,Q,SC1DhDqB,EAAiB,SAACjG,GAAD,OAAkB,WACvC,IAAMkG,EAASzI,SAAS0I,eAAT,eAAgCnG,EAAhC,eACXkG,GACFA,EAAOE,eAAe,CAAEC,MAAO,MAAOC,SAAU,aA0DrCC,EAtDD,SAAC,GAAD,QAAGvG,YAAH,MAAU,EAAV,MAAawG,gBAAb,gBACZ,kBAACC,EAAA,EAAKC,MAAN,CAAYC,SAAO,EAACC,KAAK,QAAQJ,SAAUA,GACzC,kBAACC,EAAA,EAAD,CAAMI,UAAW7G,EAAO,EAAG8F,OAAiB,IAAT9F,EAAY+F,QAASE,EAAe,IACrE,kBAACQ,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAKM,YAAN,yBAIJ,kBAACN,EAAA,EAAD,CACEI,UAAW7G,EAAO,EAClB8F,OAAiB,IAAT9F,EACRgH,SAAUhH,EAAO,EACjB+F,QAASE,EAAe,IAExB,kBAACQ,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAKM,YAAN,6BAIJ,kBAACN,EAAA,EAAD,CACEI,UAAW7G,EAAO,EAClB8F,OAAiB,IAAT9F,EACRgH,SAAUhH,EAAO,EACjB+F,QAASE,EAAe,IAExB,kBAACQ,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAKM,YAAN,6BAIJ,kBAACN,EAAA,EAAD,CACEI,UAAW7G,EAAO,EAClB8F,OAAiB,IAAT9F,EACRgH,SAAUhH,EAAO,EACjB+F,QAASE,EAAe,IAExB,kBAACQ,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAKM,YAAN,gCAIJ,kBAACN,EAAA,EAAD,CACEI,UAAW7G,EAAO,EAClB8F,OAAiB,IAAT9F,EACRgH,SAAUhH,EAAO,EACjB+F,QAASE,EAAe,IAExB,kBAACQ,EAAA,EAAKK,QAAN,KACE,kBAACL,EAAA,EAAKM,YAAN,6BCEOE,EArBE,WAAO,IACdjH,EAAS+D,IAAT/D,KACR,OACE,kBAAC,WAAD,KACE,yBAAKkH,UAAU,4BACb,yBACEC,IAAI,iBACJC,IAAG,UJlDwD,GIkDxD,sCACHF,UAAU,oBAGd,yBAAKA,UAAU,uBACb,yBACE/B,MAAO,CAAEkC,QAAS,OAAQC,eAAgB,SAAU3B,YAAa,KAEjE,kBAAC4B,EAAD,CAAevH,KAAMA,EAAMwG,UAAQ,Q,kICvC9BgB,GAhBK,WAAO,IACjBlH,EAAgBuD,IAAhBvD,YAER,OACE,kBAAC,WAAD,KACGA,GACC,kBAACmH,GAAA,EAAD,CAASC,SAAO,GACd,kBAACC,GAAA,EAAD,eADF,uHCkNOC,G,+MA9LbC,MAAQ,CACN1M,MAAO,GACPC,IAAK,GACLsD,aAAc,GACdpD,IAAK,MACLC,OAAQ,IACRC,OAAQ,KACRC,MAAO,IACPC,MAAO,KACPoM,cAAc,G,EAGhBC,aAAe,SACbC,EADa,GAGT,IADFnC,EACC,EADDA,KAAMoC,EACL,EADKA,MAER,EAAKC,UAAS,SAACL,GACb,IAAMM,EAAQ,6BACTN,GADS,mBAEXhC,EAAOoC,IAGV,OADA,EAAKG,YAAYD,GACVA,M,EAIXE,eAAiB,SACfL,EADe,OAEbnC,EAFa,EAEbA,KAAMoC,EAFO,EAEPA,MAFO,OAIf,EAAKC,UAAS,SAACL,GAAD,oBAAC,gBACVA,GADS,mBAEXhC,EAAOoC,Q,EAGZK,a,sBAAe,4CAAA3M,EAAA,wDAYT,EAAKkM,MARP1M,EAJW,EAIXA,MACAC,EALW,EAKXA,IACAsD,EANW,EAMXA,aACApD,EAPW,EAOXA,IACAC,EARW,EAQXA,OACAC,EATW,EASXA,OACAC,EAVW,EAUXA,MACAC,EAXW,EAWXA,MAEF,EAAK6M,MAAMC,SACTrN,EACAC,EACAsD,EACApD,EACAmN,SAASlN,GACTkN,SAASjN,GACTiN,SAAShN,GACTgN,SAAS/M,IArBE,2C,EAyBfgN,qBAAuB,SAACV,GACtBA,EAAEW,iBACF,EAAKT,UAAS,SAACL,GAAD,MAAY,CAAEC,cAAeD,EAAMC,kB,EAGnDM,YAAc,SAACP,GACb,IAAMe,EAAYf,EAAMzM,IAAI+G,OACxB1G,EAAQ,EACRC,EAAQ,GACRkN,EAAY,IACdnN,EAAQmN,EAAY,EACpBlN,EAAQkN,EAAY,IAElBA,EAAY,IACdnN,EAAQmN,EAAY,EACpBlN,EAAQkN,EAAY,IAElBA,EAAY,KACdnN,EAAQmN,EAAY,GACpBlN,EAAQkN,EAAY,IAEtB,EAAKV,UAAS,iBAAO,CAAEzM,MAAOA,EAAMoN,WAAYnN,MAAOA,EAAMmN,gB,wDAGrD,IAAD,EAWHC,KAAKjB,MATP1M,EAFK,EAELA,MACAC,EAHK,EAGLA,IACAsD,EAJK,EAILA,aACApD,EALK,EAKLA,IACAG,EANK,EAMLA,MACAC,EAPK,EAOLA,MACAH,EARK,EAQLA,OACAC,EATK,EASLA,OACAsM,EAVK,EAULA,aAGF,OACE,6BACE,kBAAC,GAAD,MACA,kBAACiB,GAAA,EAAD,CAAMP,SAAUM,KAAKR,cACnB,kBAACS,GAAA,EAAKC,MAAN,CACEC,MAAM,8DACNC,YAAY,GACZrD,KAAK,QACLoC,MAAO9M,EACPgO,SAAUL,KAAKf,aACfqB,UAAQ,IAEV,kBAACL,GAAA,EAAKC,MAAN,CACEC,MAAM,yDACNC,YAAY,GACZrD,KAAK,MACLoC,MAAO7M,EACP+N,SAAUL,KAAKf,eAEhBD,GACC,kBAAC,WAAD,KACE,kBAACuB,GAAA,EAAD,MACA,gDACA,kBAACN,GAAA,EAAKC,MAAN,CACEC,MAAM,4BACNC,YAAY,GACZrD,KAAK,eACLoC,MAAOvJ,EACPyK,SAAUL,KAAKf,eAEjB,kBAACgB,GAAA,EAAKrC,MAAN,KACE,kBAACqC,GAAA,EAAKC,MAAN,CACEC,MAAM,iBACNC,YAAY,IACZrD,KAAK,SACLoC,MAAO1M,EACP4N,SAAUL,KAAKf,aACfxC,MAAM,IACN6D,UAAQ,IAEV,kBAACL,GAAA,EAAKC,MAAN,CACEC,MAAM,iBACNC,YAAY,KACZrD,KAAK,SACLoC,MAAOzM,EACP2N,SAAUL,KAAKf,aACfxC,MAAM,IACN6D,UAAQ,IAEV,kBAACL,GAAA,EAAKC,MAAN,CACEC,MAAM,gBACNC,YAAY,IACZrD,KAAK,QACLoC,MAAOxM,EACP0N,SAAUL,KAAKT,eACf9C,MAAM,IACN6D,UAAQ,IAEV,kBAACL,GAAA,EAAKC,MAAN,CACEC,MAAM,gBACNC,YAAY,KACZrD,KAAK,QACLoC,MAAOvM,EACPyN,SAAUL,KAAKT,eACf9C,MAAM,IACN6D,UAAQ,KAGZ,kBAACL,GAAA,EAAKC,MAAN,CACEC,MAAM,+CACNC,YAAY,MACZrD,KAAK,MACLoC,MAAO3M,EACP6N,SAAUL,KAAKf,aACfxC,MAAM,IACN6D,UAAQ,KAId,kBAACL,GAAA,EAAKrC,MAAN,KACE,kBAACqC,GAAA,EAAKO,OAAN,CAAaC,QAAQ,OAAOC,QAASV,KAAKP,MAAMiB,QAASC,SAAO,IAChE,kBAACV,GAAA,EAAKO,OAAN,CACEC,QAAO,UAAKzB,EAAe,OAAS,OAA7B,qBACP/B,QAAS+C,KAAKJ,qBACdgB,OAAK,W,GAtLMC,aC7BV,GACJ,CACHC,OAAQ,gBAFD,GAIJ,CACHA,OAAQ,gBALD,GAOJ,CACHA,OAAQ,gBARD,GAUJ,CACHA,OAAQ,gBAXD,GAaJ,CACHA,OAAQ,gBCwFDC,GAjFA,WAAO,IAAD,EAC4B/I,IAAvCI,EADW,EACXA,UAAWW,EADA,EACAA,wBACXb,EAAaoC,IAAbpC,SACAC,EAAWoC,IAAXpC,OACA6I,EP6TH,WAA4B,IAAD,EACQjJ,EAAe,gBADvB,mBAGhC,MAAO,CACLnC,aAJ8B,KAK9BoL,gBAL8B,MO7TJC,GAApBD,gBACA3I,EAAWmC,IAAXnC,OACAC,EAAcmC,IAAdnC,UACAC,EAAcmC,IAAdnC,UACAC,EAAamC,IAAbnC,SACAC,EAAamC,IAAbnC,SACAyC,EAAYD,IAAZC,QAVW,EAWyBL,IAApC7G,EAXW,EAWXA,cAAe8G,EAXJ,EAWIA,iBAXJ,EPkad,WAA4B,IAAD,EACQ/C,EAAe,gBADvB,mBAEhC,MAAO,CACLN,aAH8B,KAI9ByJ,gBAJ8B,MOtZUC,GAAlCD,EAZW,EAYXA,gBAAiBzJ,EAZN,EAYMA,aACjBuD,EAAmBD,IAAnBC,eAbW,4CAenB,WACE3I,EACAC,EACAsD,EACApD,EACAC,EACAC,EACAC,EACAC,GARF,mBAAAC,EAAA,6DAUEqO,GAAgB,GACZE,EAAqC,GAEpB,KAAjBxL,IACFwC,EAAUxC,EAAawD,eACjBiI,EAAqB,CACzB9O,OAAQqD,EAAawD,cACrBkI,SAAU,KACVC,QAAS,MAEXH,EAAqB,CAACC,GACtBtI,EAAwBsI,GACxBvG,EAAiB,CAACuG,KAtBtB,SAyBiCtN,EAAgB1B,EAAOC,EAAKE,GAzB7D,UAyBQgP,EAzBR,OAgCoC,KANlCJ,EAAkB,sBACbA,GADa,YAEbpN,GAFa,YAGbwN,KAGkBnI,OAhCzB,wBAiCI2B,GAAe,GACfkG,GAAgB,GAlCpB,2BAsCElG,GAAe,GAEfF,EAAiBsG,GACjBrI,EAAwBqI,EAAmB,IAE3ClJ,EAAS7F,GACT8F,EAAO7F,GACP0O,EAAgBpL,GAChBwC,EAAUgJ,EAAmB,GAAG7O,QAChC8F,EAAO7F,GACP8F,EAAU7F,GACV8F,EAAU7F,GACV8F,EAAS7F,GACT8F,EAAS7F,GACTsI,EAAQ,GAER1F,EAAWiM,GAAaX,QAExBY,YAAW,WACT,IAAMC,EAAWhN,SAAS0I,eAAe,oBACrCsE,GACFA,EAASrE,eAAe,CAAEE,SAAU,WAEtC0D,GAAgB,KACf,GA9DL,6CAfmB,sBA+EnB,OAAO,kBAACU,GAAD,CAAWlC,SA/EC,0DA+EmBgB,QAASjJ,KC7ElCoK,GAlBD,WAAO,IACX3K,EAAS+D,IAAT/D,KACR,OACE,kBAAC,WAAD,KACE,yBAAKmF,MAAO,CAAEyF,OAAQ,MACtB,kBAACC,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,yBAAK5H,GAAG,oBACN,kBAACqN,GAAA,EAAD,CAASC,MAAgB,IAATjL,EAAa,YAASkL,GACpC,qCACA,kBAAC,GAAD,Y,UCNOC,G,+MACnBtD,MAAQ,CACNI,MAAO,EAAKM,MAAM6C,QAAQjJ,OAAS,EAAI,EAAKoG,MAAM6C,QAAQ,GAAK,I,EAGjErD,aAAe,SACbsD,EADa,GAGT,IADFpD,EACC,EADDA,MAEF,EAAKC,SAAS,CAAED,UAChB,EAAKM,MAAMY,SAASlB,I,wDAGZ,IACAA,EAAUa,KAAKjB,MAAfI,MAER,OACE,yBAAKf,UAAU,eACb,0BAAMA,UAAU,eAAe4B,KAAKP,MAAM+C,OAC1C,kBAACC,GAAA,EAAD,CACEpC,SAAUL,KAAKf,aACfqD,QAAStC,KAAKP,MAAM6C,QAAQI,KAAI,SAACC,GAAD,MAAQ,CACtCC,IAAKD,EACLxO,KAAMwO,EACNxD,MAAOwD,MAETvC,YAAY,mBACZjB,MAAOA,EACP0D,WAAS,EACTC,WAAS,S,GA7BkCjC,aAAhCwB,GAIZU,aAAe,CAAET,QAAS,GAAIjC,SAAU,SAACkC,MCClD,IAAMS,GAAkB,SACtB5K,EACA8C,EACAwE,EACAxI,GAJsB,OAKnB,SAACV,GACJ4B,EAAU5B,GACNU,GAAQ,IACVgE,EAAQ,GACRwG,YAAW,WACThC,MACC,MAwBQuD,GApBG,SAAC,GAAyB,IAAvBvD,EAAsB,EAAtBA,SACX1L,EAAkB6G,IAAlB7G,cACAoE,EAAcJ,IAAdI,UACAV,EAAiByD,IAAjBzD,aAHiC,EAIfuD,IAAlB/D,EAJiC,EAIjCA,KAAMgE,EAJ2B,EAI3BA,QACd,OACE,6BACE,kBAAC+E,GAAA,EAAD,CAAMP,SAAUA,GACd,kBAAC,GAAD,CACE8C,MAAM,GACNF,QAAStO,EAAc0O,KAAI,SAACC,GAAD,OAAOA,EAAEpQ,UACpC8N,SAAU2C,GAAgB5K,EAAW8C,EAASwE,EAAUxI,KAE1D,yBAAKmF,MAAO,CAAEyF,OAAQ,MACtB,kBAAC7B,GAAA,EAAKO,OAAN,CAAaC,QAAQ,OAAOC,QAAShJ,EAAciJ,SAAO,OCoBnDI,GA5CA,WAAO,IACZ1G,EAA8BrC,IAA9BqC,0BACA6I,EXoPH,WAA0B,IAAD,EACMnL,EAAe,cADrB,mBACvB1B,EADuB,KACX8M,EADW,iDAE9B,WACE9Q,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARF,iBAAAC,EAAA,sEAU6BW,EACzBnB,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GAlBJ,gBAUU4D,EAVV,EAUUA,SAUR2M,EAAc3M,GApBhB,4CAF8B,sBAwB9B,MAAO,CACLH,aACA6M,cA1B4B,2DWpPJE,GAAlBF,cACAG,EXgRH,WAA2B,IAAD,EACOtL,EAAe,eADtB,mBACxBzB,EADwB,KACXgN,EADW,iDAE/B,WACEjR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARF,iBAAAC,EAAA,sEAU6BU,EACzBlB,EAAM+G,cACN9G,EAAI8G,cACJ7G,EAAO6G,cACP5G,EAAI4G,cACJ3G,EACAC,EACAC,EACAC,GAlBJ,gBAUU4D,EAVV,EAUUA,SAUR8M,EAAe9M,GApBjB,4CAF+B,sBAwB/B,MAAO,CACLF,cACA+M,eA1B6B,2DWhRJE,GAAnBF,eACAnI,EAAYD,IAAZC,QAEA7I,EAAUiI,IAAVjI,MACAC,EAAQiI,IAARjI,IACAC,EAAWyF,IAAXzF,OACAC,EAAQgI,IAARhI,IACAC,EAAWgI,IAAXhI,OACAC,EAAWgI,IAAXhI,OACAC,EAAUgI,IAAVhI,MACAC,EAAUgI,IAAVhI,MACAwI,EAAoBD,IAApBC,gBAdW,4CAgBnB,sBAAAvI,EAAA,6DACEuI,GAAgB,GAChB8H,EAAc7Q,EAAOC,EAAKC,EAAQC,EAAKC,EAAQC,EAAQC,EAAOC,GAC9DyQ,EAAehR,EAAOC,EAAKC,EAAQC,EAAKC,EAAQC,EAAQC,EAAOC,GAHjE,SAIQyH,EACJhI,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAZJ,OAcEsI,EAAQ,GAER1F,EAAWgO,GAAa1C,QAExBY,YAAW,WACT,IAAMC,EAAWhN,SAAS0I,eAAe,oBACrCsE,GACFA,EAASrE,eAAe,CAAEE,SAAU,WAEtCpC,GAAgB,KACf,GAxBL,4CAhBmB,sBA0CnB,OAAO,kBAAC,GAAD,CAAWsE,SA1CC,8CCCN+D,GAfD,WAAO,IACXvM,EAAS+D,IAAT/D,KACR,OACE,kBAAC6K,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,yBAAK5H,GAAG,oBACN,kBAACqN,GAAA,EAAD,CAASC,MAAgB,IAATjL,EAAa,YAASkL,GACpC,sCACA,kBAAC,GAAD,WCQGsB,GAPG,SAAC,GAAD,IAAGvD,EAAH,EAAGA,MAAOhB,EAAV,EAAUA,MAAV,OAChB,uBAAG9C,MAAO,CAAEsH,OAAQ,IAClB,qCAAOxD,EAAP,OATgB,SAAChB,GACnB,MAAqB,mBAAVA,EACFA,EAAQ,OAAS,QAEnBA,GAAS,KAMbyE,CAAYzE,KCXX6D,GAAkB,SACtB/I,EACAlD,GAFsB,OAGnB,SAACoI,GACJlF,EACElD,EAAgB8M,MAAK,SAACC,GAAD,OAAOA,EAAEhO,KAAOqJ,MAAUpI,EAAgB,MAkDpDgN,GA9CK,WAAO,IAAD,EAKpB/L,IAHFjB,EAFsB,EAEtBA,gBACAkD,EAHsB,EAGtBA,6BACApE,EAJsB,EAItBA,uBAEMiC,EAAkB6D,IAAlB7D,cAER,OACE,kBAAC,WAAD,KACGf,EAAgBsC,OAAS,GACxB,kBAAC,WAAD,KACE,kBAAC,GAAD,CACEmJ,MAAM,gBACNF,QAASvL,EAAgB2L,KAAI,SAACxI,GAAD,OAAYA,EAAOpE,MAChDuK,SAAU2C,GACR/I,EACAlD,KAGHlB,GAA0BiC,GACzB,kBAAC,WAAD,KACE,yBAAKuE,MAAO,CAAEyF,OAAQ,MACtB,6BACG,CACC,CAAE3B,MAAO,MAAOhB,MAAOtJ,EAAuBmO,KAC9C,CAAE7D,MAAO,QAAShB,MAAOtJ,EAAuBoO,OAChD,CACE9D,MAAO,YACPhB,MAAOtJ,EAAuBqO,WAEhC,CAAE/D,MAAO,WAAYhB,MAAOtJ,EAAuBsO,UACnD,CAAEhE,MAAO,UAAWhB,MAAOtJ,EAAuBuO,SAClD,CAAEjE,MAAO,OAAQhB,MAAOtJ,EAAuBwO,OAC/C3B,KAAI,SAACC,GAAD,OACJ,kBAAC,GAAD,CAAWxC,MAAOwC,EAAExC,MAAOhB,MAAOwD,EAAExD,gBC5ChD6D,GAAkB,SACtB7I,EACAmK,GAFsB,OAGnB,SAACnF,GACJhF,EACEmK,EAAWT,MAAK,SAACU,GAAD,OAAOA,EAAE5Q,MAAQwL,MAAUmF,EAAW,MA0C3CE,GAtCI,WAAO,IAAD,EAKnBxM,IAHFhB,EAFqB,EAErBA,WACAmD,EAHqB,EAGrBA,wBACAnE,EAJqB,EAIrBA,kBAEM8B,EAAkB6D,IAAlB7D,cACR,OACE,kBAAC,WAAD,KACGd,EAAWqC,OAAS,GACnB,kBAAC,GAAD,CACEmJ,MAAM,wBACNF,QAAStL,EAAW0L,KAAI,SAACxI,GAAD,OAAYA,EAAOvG,OAC3C0M,SAAU2C,GAAgB7I,EAAyBnD,KAGtDhB,GAAqB8B,GACpB,kBAAC,WAAD,KACE,yBAAKuE,MAAO,CAAEyF,OAAQ,MACtB,6BACG,CACC,CAAE3B,MAAO,SAAUhB,MAAOnJ,EAAkBqD,QAC5C,CAAE8G,MAAO,QAAShB,MAAOnJ,EAAkByO,OAC3C,CACEtE,MAAO,WACPhB,MAAOnJ,EAAkB0O,UAE3B,CAAEvE,MAAO,QAAShB,MAAOnJ,EAAkB2O,QAC3CjC,KAAI,SAACC,GAAD,OACJ,kBAAC,GAAD,CAAWxC,MAAOwC,EAAExC,MAAOhB,MAAOwD,EAAExD,eClC5CyF,GAA8B,SAClC9M,EACA8D,GAFkC,OAG/B,SAACsD,GACJA,EAAEW,iBACFjE,GAAkB9D,KAqCL+M,GAlCG,SAAC,GAAyB,IAAvBnF,EAAsB,EAAtBA,SACX/H,EAAiB0D,IAAjB1D,aADiC,EAEGgE,IAApC7D,EAFiC,EAEjCA,cAAe8D,EAFkB,EAElBA,iBACvB,OACE,6BACE,kBAACmG,GAAA,EAAKC,IAAN,KACE,kBAAC/B,GAAA,EAAD,CAAMP,SAAUA,GACd,yBAAKrD,MAAO,CAAEkC,QAAS,SACrB,yBAAKlC,MAAO,CAAEyI,SAAU,EAAGC,aAAc,QACvC,kBAAC,GAAD,OAEF,yBAAK1I,MAAO,CAAEyI,SAAU,EAAGjI,YAAa,QACtC,kBAAC,GAAD,QAGJ,yBAAKR,MAAO,CAAEyF,OAAQ,MAEtB,kBAAC7B,GAAA,EAAKrC,MAAN,KACE,kBAACqC,GAAA,EAAKO,OAAN,CAAaC,QAAQ,OAAOC,QAAS/I,EAAcgJ,SAAO,IAC1D,kBAACV,GAAA,EAAKO,OAAN,CACEC,QAAO,UAAK3I,EAAgB,OAAS,OAA9B,YACPmF,QAAS2H,GACP9M,EACA8D,GAEFgF,OAAK,SCjBJG,GApBA,WAAO,IACZ7F,EAAYD,IAAZC,QACAI,EAAoBD,IAApBC,gBAFW,4CAInB,sBAAAzI,EAAA,sDACEqI,EAAQ,GACRI,GAAgB,GAEhB9F,EAAWgO,GAAa1C,QAExBY,YAAW,WACT,IAAMC,EAAWhN,SAAS0I,eAAe,oBACrCsE,IACFA,EAASrE,eAAe,CAAEE,SAAU,WACpClC,GAAgB,MAEjB,GAZL,4CAJmB,sBAkBnB,OAAO,kBAAC,GAAD,CAAWoE,SAlBC,8CCkBNsF,GApBQ,WAAO,IAAD,EAGvBhN,IADFX,SAAYC,EAFa,EAEbA,QAASC,EAFI,EAEJA,OAEjBF,EAAQ,sBAAOC,GAAP,YAAmBC,IAEjC,OACE,kBAAC,WAAD,KACGF,EAASgC,OAAS,GACjB,kBAACsF,GAAA,EAAD,CAASC,SAAO,GACd,kBAACC,GAAA,EAAD,iBACCxH,EAASqL,KAAI,SAAC9D,EAASqG,GAAV,OACZ,uBAAGrC,IAAG,kBAAaqC,IAAMrG,SCMtB6E,GAhBD,WAAO,IACXvM,EAAS+D,IAAT/D,KACR,OACE,kBAAC6K,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,yBAAK5H,GAAG,oBACN,kBAACqN,GAAA,EAAD,CAASC,MAAgB,IAATjL,EAAa,YAASkL,GACpC,sCACA,kBAAC,GAAD,MACA,kBAAC,GAAD,WC2CN8C,G,+MACJnG,MAAQ,CACNI,MACE,EAAKM,MAAM6C,QAAQjJ,OAAS,EAAI,EAAKoG,MAAM6C,QAAQ,GAAGpM,YAAc,I,EAGxE+I,aAAe,SACbsD,EADa,GAGT,IADFpD,EACC,EADDA,MAEIgG,EAAiB,EAAK1F,MAAM6C,QAAQ8C,QACxC,SAACzC,GAAD,OAAOA,EAAEzM,cAAgBiJ,KACzB,GACF,EAAKC,SAAS,CAAED,MAAOgG,EAAejP,cACtC,EAAKuJ,MAAMY,SAAS8E,I,wDAGZ,IACAhG,EAAUa,KAAKjB,MAAfI,MAER,OACE,yBAAKf,UAAU,eACb,0BAAMA,UAAU,eAAe4B,KAAKP,MAAM+C,OAC1C,kBAACC,GAAA,EAAD,CACErC,YAAY,mBACZC,SAAUL,KAAKf,aACfqD,QAAStC,KAAKP,MAAM6C,QAAQI,KAAI,SAACC,GAAD,MAAQ,CACtCC,IAAKD,EAAEzM,YACP/B,KAAMwO,EAAEzM,YACRiJ,MAAOwD,EAAEzM,YACTmP,MACa,SAAX1C,EAAEvM,KACE,CACEkI,IACa,QAAXqE,EAAEvM,KAAF,UrB3F+C,GqB2F/C,iCrB3F+C,GqB2F/C,8BAIJgM,MAERjD,MAAOA,EACP0D,WAAS,EACTC,WAAS,S,GA1CoBjC,aAAjCqE,GAKGnC,aAAe,CAAET,QAAS,GAAIjC,SAAU,SAACkC,MA4ClD,IAee+C,GAfI,WAAO,IAAD,EACyBtN,IAAxCf,EADe,EACfA,WAAYmD,EADG,EACHA,wBACpB,OACE,kBAAC,WAAD,KACGnD,EAAWoC,OAAS,GACnB,kBAAC,GAAD,CACEmJ,MAAM,cACNF,QAASrL,EACToJ,SAAUjG,MC3FLmL,GAfG,SAAC,GAAyB,IAAvB7F,EAAsB,EAAtBA,SACX9H,EAAiB2D,IAAjB3D,aACR,OACE,6BACE,kBAACmK,GAAA,EAAKC,IAAN,KACE,kBAAC/B,GAAA,EAAD,CAAMP,SAAUA,GACd,kBAAC,GAAD,MACA,yBAAKrD,MAAO,CAAEyF,OAAQ,MACtB,kBAAC7B,GAAA,EAAKO,OAAN,CAAaC,QAAQ,OAAOC,QAAS9I,EAAc+I,SAAO,QCSrDI,GApBA,WAAO,IACZ7F,EAAYD,IAAZC,QACAM,EAAoBD,IAApBC,gBAFW,4CAInB,sBAAA3I,EAAA,sDACEqI,EAAQ,GACRM,GAAgB,GAEhBhG,EAAWgO,GAAa1C,QAExBY,YAAW,WACT,IAAMC,EAAWhN,SAAS0I,eAAe,oBACrCsE,GACFA,EAASrE,eAAe,CAAEE,SAAU,WAEtChC,GAAgB,KACf,KAZL,4CAJmB,sBAkBnB,OAAO,kBAAC,GAAD,CAAWkE,SAlBC,8CCkBN8F,GApBK,WAAO,IAAD,EAGpBxN,IADFX,SAAYC,EAFU,EAEVA,QAASzD,EAFC,EAEDA,IAEjBwD,EAAQ,sBAAOC,GAAP,YAAmBzD,IAEjC,OACE,kBAAC,WAAD,KACGwD,EAASgC,OAAS,GACjB,kBAACsF,GAAA,EAAD,CAASC,SAAO,GACd,kBAACC,GAAA,EAAD,iBACCxH,EAASqL,KAAI,SAAC9D,EAASqG,GAAV,OACZ,uBAAGrC,IAAG,kBAAaqC,IAAMrG,SCMtB6E,GAhBD,WAAO,IACXvM,EAAS+D,IAAT/D,KACR,OACE,kBAAC6K,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,yBAAK5H,GAAG,oBACN,kBAACqN,GAAA,EAAD,CAASC,MAAgB,IAATjL,EAAa,YAASkL,GACpC,mCACA,kBAAC,GAAD,MACA,kBAAC,GAAD,W,UCYGqD,GArBW,WAAO,IAAD,EAU1BzN,IARF3F,EAF4B,EAE5BA,MACAC,EAH4B,EAG5BA,IACAC,EAJ4B,EAI5BA,OACAC,EAL4B,EAK5BA,IACAC,EAN4B,EAM5BA,OACAC,EAP4B,EAO5BA,OACAC,EAR4B,EAQ5BA,MACAC,EAT4B,EAS5BA,MAKF,OADA4C,EAAWgO,GAAa1C,QAEtB,kBAACN,GAAA,EAAD,CAAQvD,QAJU,kBAClB/I,EAAY7B,EAAOC,EAAKC,EAAQC,EAAKC,EAAQC,EAAQC,EAAOC,IAG9B+N,SAAO,GAArC,0B,wCCgCW+E,G,+MA1Cb3G,MAAQ,CACN4G,SARsB,gBAStBC,QAAQ,G,EAEVC,WAAa,WACP,EAAKpG,MAAMN,QACb2G,KAAK,EAAKrG,MAAMN,OAChB,EAAKC,UAAS,iBAAO,CAAEuG,SAbH,qBAcpBI,QAAQC,IAAI,YACZtE,YAAW,WACT,EAAKtC,UAAS,iBAAO,CAAEuG,SAjBL,sBAkBjB,O,EAIPM,gBAAkB,WAChB,EAAK7G,UAAS,iBAAO,CAAEwG,QAAQ,O,EAEjCM,iBAAmB,WACjB,EAAK9G,UAAS,iBAAO,CAAEwG,QAAQ,O,wDAI/B,OACE,kBAACO,GAAA,EAAD,CACE1F,QAAST,KAAKjB,MAAM4G,SACpBrJ,SAAS,aACT8J,KAAMpG,KAAKjB,MAAM6G,OACjBS,QACE,kBAACC,GAAA,EAAD,CACEvJ,KAAK,OACLE,QAAS+C,KAAK6F,WACdU,YAAavG,KAAKiG,gBAClBO,aAAcxG,KAAKkG,iBACnBxR,MAAI,U,GAnCGmM,aCNbyB,GAAU,CAAC,mCAAoC,QAAQI,KAAI,SAACC,GAAD,MAAQ,CACvEC,IAAKD,EACLxO,KAAMwO,EACNxD,MAAOwD,MAGH8D,GAAsB,SAC1B/K,GAD0B,OAEvB,SAAC6G,EAAD,GAAsE,IAA5BpD,EAA2B,EAA3BA,MAC7CzD,EAAmByD,KAoBNuH,GAjBiB,WAAO,IAC7BhL,EAAuBD,IAAvBC,mBACR,OACE,yBAAK0C,UAAU,eACb,0BAAMA,UAAU,eAAhB,oBACA,kBAACqE,GAAA,EAAD,CACEpC,SAAUoG,GAAoB/K,GAC9B4G,QAASA,GACTlC,YAAY,mBACZyC,WAAS,EACTC,WAAS,EACT6D,aAAcrE,GAAQ,GAAGnD,UCVjC,IAAMyH,GAAc,SAACC,GAAD,OAClBA,EAAYnE,KAAI,SAAC7P,GAAD,OAAOA,EAAE2D,YAAUsQ,KAAK,KAEpCC,GAAgC,SACpCF,EACAhP,GAFoC,OAIpCgP,EAAYzB,QAAO,SAACvS,GAAD,MACG,SAApBgF,GACI,CAAC,MAAO,MAAO,SAAU,iBAAiBmP,SAASnU,EAAEkK,UAmF9CkK,GA/EA,WAAO,IACZ1Q,E5BsXH,WAAsB,IAAD,EACEwB,EAAe,UADjB,mBAG1B,MAAO,CACLxB,OAJwB,KAKxBqC,UALwB,M4BtXPsO,GAAX3Q,OACAsB,EAAoB4D,IAApB5D,gBACFgP,EA3BR,SACEhU,EACA+P,GAEA,IAAIuE,EAAO,IAAIC,IACf,OAAOvU,EAAEuS,QAAO,SAACiC,GACf,IAAIC,EAAI1E,EAAIyE,GACZ,OAAOF,EAAKI,IAAID,IAAaH,EAAKK,IAAIF,MAoBpBG,CAClBV,IACQ,OAANxQ,QAAM,IAANA,OAAA,EAAAA,EAAQsQ,cAAgB,GACxBhP,IAEF,SAAChF,GAAD,OAA8BA,EAAEkK,QAGlC,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,MACCxG,GACC,yBAAK8F,MAAO,CAAEqL,UAAW,KACvB,yBAAKtJ,UAAU,eACb,yBAAK/B,MAAO,CAAEkC,QAAS,OAAQoJ,cAAe,QAC5C,0BAAMvJ,UAAU,eAAhB,iBACA,kBAAC,GAAD,CACEe,MAAOyH,GACLG,GACExQ,EAAOsQ,YACPhP,MAIN,yBAAKwE,MAAO,CAAEkC,QAAS,OAAQjC,SAAU,WAAYsL,MAAO,KACzDf,EAAYnE,KAAI,SAACmF,GAAD,OACf,yBAAKxL,MAAO,CAAEkC,QAAS,SACrB,yBACElC,MAAO,CACLI,MAAO,GACPqF,OAAQ,GACRpF,gBAAiBmL,EAAW1F,MAC5B2F,aAAc,KAGlB,0BAAMzL,MAAO,CAAE0L,WAAY,EAAGC,YAAa,KACxCH,EAAW9K,YAMtB,uBAAGV,MAAO,CAAE4L,UAAW,aAAcP,UAAW,KAC7CX,GACCxQ,EAAOsQ,YACPhP,GACA6K,KAAI,SAACmF,GAAD,OACJ,0BACExL,MAAO,CACLK,gBAAiBmL,EAAW1F,MAC5B+F,QAAS,QACTJ,aAAc,IAGfD,EAAWrR,kBCzBf2R,GAtDE,WAAO,IACdlR,EAAee,IAAff,WACAE,E7BoZH,WAAwB,IAAD,EACIY,EAAe,YADnB,mBAG5B,MAAO,CACLZ,SAJ0B,KAK1BiR,YAL0B,M6BpZPC,GAAblR,SACAlB,EAAsB+B,IAAtB/B,kBACA4B,EAAoB4D,IAApB5D,gBAER,OACE,6BACGZ,EAAWoC,OAAS,GAAwC,UAAlB,OAAjBpD,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBC,cAC3C,kBAAC,WAAD,KACE,yBAAKmG,MAAO,CAAEyI,SAAU,IACtB,yBAAK1G,UAAU,eACb,6BACE,0BAAMA,UAAU,eAAhB,OAC2B,SAApBvG,EAA6B,QAAU,GAD9C,KAGA,kBAAC,GAAD,CACEsH,MACsB,SAApBtH,EACIV,EAAST,MADb,OAEIT,QAFJ,IAEIA,OAFJ,EAEIA,EAAmBC,eAI7B,2BACE,0BAAMkI,UAAU,2BACO,SAApBvG,EACGV,EAAST,MADZ,OAEGT,QAFH,IAEGA,OAFH,EAEGA,EAAmBC,gBAKV,SAApB2B,GACC,yBAAKwE,MAAO,CAAEyI,SAAU,IACtB,yBAAK1G,UAAU,eACb,6BACE,0BAAMA,UAAU,eAAhB,kBACA,kBAAC,GAAD,CAAMe,MAAOhI,EAASP,aAExB,2BACE,0BAAMwH,UAAU,2BACbjH,EAASP,iBCUf0R,GAxDK,WAAO,IAAD,EAKpBtQ,IAHFZ,EAFsB,EAEtBA,YACAH,EAHsB,EAGtBA,WACAlB,EAJsB,EAItBA,qBAEM8B,EAAoB4D,IAApB5D,gBAER,OACE,6BACGZ,EAAWoC,OAAS,GACnB,kBAAC,WAAD,KACE,yBAAKgD,MAAO,CAAEyI,SAAU,IACtB,yBAAK1G,UAAU,eACb,6BACE,0BAAMA,UAAU,eAAhB,UAC8B,SAApBvG,EAA6B,QAAU,GADjD,KAGA,kBAAC,GAAD,CACEsH,MACsB,SAApBtH,EACIT,EAAYV,MADhB,OAEIX,QAFJ,IAEIA,OAFJ,EAEIA,EAAsBxD,UAIhC,2BACE,0BAAM6L,UAAU,0BACO,SAApBvG,EACGT,EAAYV,MADf,OAEGX,QAFH,IAEGA,OAFH,EAEGA,EAAsBxD,WAKb,SAApBsF,GACC,yBAAKwE,MAAO,CAAEyI,SAAU,IACtB,yBAAK1G,UAAU,eACb,6BACE,0BAAMA,UAAU,eAAhB,qBACA,kBAAC,GAAD,CAAMe,MAAO/H,EAAYR,aAE3B,2BACE,0BAAMwH,UAAU,0BACbhH,EAAYR,iBCnBlB2R,GArBD,WAAO,IACXrR,EAAS+D,IAAT/D,KACR,OACE,kBAAC6K,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,yBAAK5H,GAAG,mBAAmBwH,MAAO,CAAEO,aAAc,KAChD,kBAACsF,GAAA,EAAD,CAASC,MAAgB,IAATjL,EAAa,YAASkL,GACpC,uCACA,kBAAC,GAAD,MACA,yBAAK/F,MAAO,CAAEyF,OAAQ,MACtB,kBAAC,GAAD,MACA,yBAAKzF,MAAO,CAAEyF,OAAQ,MACtB,kBAAC,GAAD,MACA,yBAAKzF,MAAO,CAAEyF,OAAQ,MACtB,kBAAC,GAAD,WCnBN0G,GAAe,kBACnB,yBAAKpK,UAAU,4BACb,wBAAIA,UAAU,iBAAd,uBACA,+PAOA,wBAAIA,UAAU,iBAAd,gBACA,gYAOA,mVAQA,wBAAIA,UAAU,iBAAd,0BACA,2QAOA,wBAAIA,UAAU,iBAAd,WACA,6QAOA,wBAAIA,UAAU,iBAAd,qCACA,4CACiB,IACf,uBAAGtJ,KAAK,iDAAR,sBAFF,IAKI,IACF,uBAAGA,KAAK,0DAAR,mBANF,IASI,IACF,uBAAGA,KAAK,yDAAR,oBAIF,0CACe,IACb,uBAAGA,KAAK,0DAAR,oBAIF,uCACW,uBAAGA,KAAK,2CAAR,gBAEX,sDAC2B,IACzB,uBAAGA,KAAK,4CAAR,cAFF,IAEqE,IACnE,uBAAGA,KAAK,4DAAR,uBAKF,wBAAIsJ,UAAU,iBAAd,SACA,uBAAGtJ,KAAK,sBAAR,qBAcW2T,GAVQ,kBACrB,kBAAC1G,GAAA,EAAD,KACE,yBAAK1F,MAAO,CAAEyF,OAAQ,MACtB,kBAACC,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,kBAAC,GAAD,UCnFFiM,GAAwB,kBAC5B,yBAAKtK,UAAU,4BACb,wBAAIA,UAAU,iBAAd,mBACA,sMAMA,wBAAIA,UAAU,iBAAd,6BACA,4BACE,yKAIA,8EACA,4BACE,wCADF,gVAOA,4BACE,gDADF,8ZAUF,wBAAIA,UAAU,iBAAd,2BAEA,wEACA,yBACEA,UAAU,eACVC,IAAI,yBACJC,IAAG,UlC1C4D,GkC0C5D,iCAGL,yBAAKF,UAAU,kBACf,sDAC0B,wCAE1B,yBACEA,UAAU,eACVC,IAAI,yBACJC,IAAG,UlCpD4D,GkCoD5D,iCAGL,yBAAKF,UAAU,kBACf,sDAC0B,yCAE1B,yBACEA,UAAU,eACVC,IAAI,yBACJC,IAAG,UlC9D4D,GkC8D5D,iCAGL,wBAAIF,UAAU,iBAAd,mBACA,+ZASA,wBAAIA,UAAU,iBAAd,WACA,6QAOA,wBAAIA,UAAU,iBAAd,SACA,6MAMA,wBAAIA,UAAU,iBAAd,SACA,2BACE,6CADF,sOAMA,2BACE,6CADF,+OAMA,2BACE,0CADF,gJAKA,2BACE,sDADF,wOAMA,2BACE,qDADF,2TAoBWqK,GAVQ,kBACrB,kBAAC1G,GAAA,EAAD,KACE,yBAAK1F,MAAO,CAAEyF,OAAQ,MACtB,kBAACC,GAAA,EAAKC,IAAN,KACE,kBAACD,GAAA,EAAKE,OAAN,CAAaxF,MAAO,IAClB,kBAAC,GAAD,UCjFOkM,OAlCf,WAAgB,IACNzR,EAAS+D,IAAT/D,KACAJ,EAAY+E,IAAZ/E,QAER,OACE,yBACEuF,MAAO,CACLI,MAAO,QACPqF,OAAQ,QACRxF,SAAU,WACVsM,SAAU,WAGZ,kBAAC,EAAD,MACa,SAAZ9R,GACC,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAKsH,UAAU,0BACb,kBAAC2D,GAAA,EAAD,CAAM8G,UAAQ,GACZ,kBAAC,GAAD,MACC3R,GAAQ,GAAK,kBAAC,GAAD,MACbA,GAAQ,GAAK,kBAAC4R,GAAD,MACb5R,GAAQ,GAAK,kBAAC6R,GAAD,MACb7R,GAAQ,GAAK,kBAAC,GAAD,SAKT,UAAZJ,GAAuB,kBAACkS,GAAD,MACX,oBAAZlS,GAAiC,kBAACmS,GAAD,QCvCxCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFzU,SAAS0I,eAAe,W","file":"static/js/main.0e0a9662.chunk.js","sourcesContent":["import { API_ROOT, MIXPANEL_KEY } from '../config';\nimport { SpacerOption } from '../types/presto';\nimport mixpanel from 'mixpanel-browser';\nimport { getGlobalState } from '../hooks';\nmixpanel.init(MIXPANEL_KEY);\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacerSgRNA = async (spacer: string) => {\n  const res = await fetch(`${API_ROOT}/generate/spacer_sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, wtSeq: '', mut: '' }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacers = async (\n  wtSeq: string,\n  mut: string,\n  pam: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/spacers`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer: '',\n      pam,\n    }),\n  });\n  const spacerOptions: SpacerOption[] = await res.json();\n  return spacerOptions;\n};\n\nexport const generateWarnings = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/warnings`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCSV = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/csv`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  const responseText = await res.text();\n  const url = window.URL.createObjectURL(new Blob([responseText]));\n  const link = document.createElement('a');\n  link.id = 'download';\n  link.href = url;\n  link.setAttribute('download', res.headers.get('FileName') || 'presto.csv');\n  document.body.appendChild(link);\n  link.click();\n\n  const elem = document.querySelector('#download');\n\n  if (elem && elem.parentNode) {\n    elem.parentNode.removeChild(elem);\n  }\n};\n\nexport const trackEvent = (event: string) => {\n  mixpanel.track(event, {\n    wtSeq: getGlobalState('wtSeq'),\n    mut: getGlobalState('mut'),\n    spacer: getGlobalState('spacer'),\n    customSpacer: getGlobalState('customSpacer'),\n    pam: getGlobalState('pam'),\n    minPbs: getGlobalState('minPbs'),\n    maxPbs: getGlobalState('maxPbs'),\n    minRt: getGlobalState('minRt'),\n    maxRt: getGlobalState('maxRt'),\n    selectedTemplateOption: getGlobalState('selectedTemplateOption')?.rt,\n    selectedSpacerOption: getGlobalState('selectedSpacerOption')?.spacer,\n    selectedPbsOption: getGlobalState('selectedPbsOption')?.pbs,\n    selectedPe3Option: getGlobalState('selectedPe3Option')?.secondGuide,\n    selectedPe3OptionType: getGlobalState('selectedPe3Option')?.type,\n    cleanWtSeq: getGlobalState('cleanWtSeq'),\n    cleanMutSeq: getGlobalState('cleanMutSeq'),\n    pegRNA: getGlobalState('pegRNA')?.sequence,\n    pe3sgRNASense: getGlobalState('pe3sgRNA')?.sense,\n    pe3sgRNAAntiSense: getGlobalState('pe3sgRNA')?.antisense,\n  });\n};\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nexport const MIXPANEL_KEY = \"05822e9dadcdca6fdf3c42405905bb0e\";","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n  generateSpacerSgRNA,\n  generateWarnings,\n} from '../api';\nimport {\n  GlobalState,\n  PBSOption,\n  PE3Option,\n  TemplateOption,\n} from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  menuTab: 'home',\n  wtSeq: '',\n  mut: '',\n  spacer: '',\n  customSpacer: '',\n  pam: 'NGG',\n  minPbs: 8,\n  maxPbs: 18,\n  minRt: 9,\n  maxRt: 16,\n  templateOptions: [],\n  selectedTemplateOption: null,\n  spacerOptions: [],\n  selectedSpacerOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3Options: [],\n  selectedPe3Option: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: null,\n  pe3sgRNA: { sense: '', antisense: '' },\n  spacersgRNA: { sense: '', antisense: '' },\n  warnings: {\n    general: [],\n    pegRna: [],\n    pe3: [],\n  },\n  spacerError: false,\n  step2Loading: false,\n  step3Loading: false,\n  step4Loading: false,\n  step5Loading: false,\n  cloningStrategy: 'Richardson & Steyert et al. 2021',\n  step3Advanced: false,\n};\n\nexport const { useGlobalState, getGlobalState } = createGlobalState(\n  initialState,\n);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n  const [mut, setMut] = useGlobalState('mut');\n  const [spacer, setSpacer] = useGlobalState('spacer');\n\n  const [pam, setPam] = useGlobalState('pam');\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n  const [minRt, setMinRt] = useGlobalState('minRt');\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [spacersgRNA, setSpacersgRNA] = useGlobalState('spacersgRNA');\n  const [selectedSpacerOption, setSelectedSpacerOption] = useGlobalState(\n    'selectedSpacerOption',\n  );\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [warnings, setWarnings] = useGlobalState('warnings');\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWarnings(\n      await generateWarnings(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWtSeq(wtSeq.toUpperCase());\n    setMut(mut.toUpperCase());\n    setSpacer(spacer.toUpperCase());\n\n    setPam(pam.toUpperCase());\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0]);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0]);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setPe3Options([\n      ...pe3Options,\n      {\n        pamStart: 0,\n        cutPE3: 0,\n        cutDiff: 0,\n        secondGuide: 'None',\n        rcSecondGuide: 'None',\n        type: 'None',\n      },\n    ]);\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0]);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const pegRNA = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.rt.toUpperCase(),\n        globalSelectedPbsOption.pbs.toUpperCase(),\n      );\n      setPegRNA(pegRNA);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: TemplateOption) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: PBSOption) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: PE3Option) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    const globalSpacer = getGlobalState('spacer');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(\n        globalSelectedPe3Option.secondGuide.toUpperCase(),\n      );\n      setPe3sgRNA(sgRNA);\n    }\n\n    const spacersgRNA = await generateSpacerSgRNA(globalSpacer);\n    setSpacersgRNA(spacersgRNA);\n  }\n\n  return {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n    templateOptions,\n    pbsOptions,\n    selectedPbsOption,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    spacersgRNA,\n    warnings,\n    setSpacer,\n    selectedTemplateOption,\n    selectedPe3Option,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n    selectedSpacerOption,\n    setSelectedSpacerOption,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function useWtSeq() {\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n\n  return {\n    wtSeq,\n    setWtSeq,\n  };\n}\n\nexport function useMut() {\n  const [mut, setMut] = useGlobalState('mut');\n\n  return {\n    mut,\n    setMut,\n  };\n}\n\nexport function useCustomSpacer() {\n  const [customSpacer, setCustomSpacer] = useGlobalState('customSpacer');\n\n  return {\n    customSpacer,\n    setCustomSpacer,\n  };\n}\n\nexport function usePam() {\n  const [pam, setPam] = useGlobalState('pam');\n\n  return {\n    pam,\n    setPam,\n  };\n}\n\nexport function useMinPbs() {\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n\n  return {\n    minPbs,\n    setMinPbs,\n  };\n}\n\nexport function useMaxPbs() {\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n\n  return {\n    maxPbs,\n    setMaxPbs,\n  };\n}\n\nexport function useMinRt() {\n  const [minRt, setMinRt] = useGlobalState('minRt');\n\n  return {\n    minRt,\n    setMinRt,\n  };\n}\n\nexport function useMaxRt() {\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  return {\n    maxRt,\n    setMaxRt,\n  };\n}\n\nexport function useSpacerOptions() {\n  const [spacerOptions, setSpacerOptions] = useGlobalState('spacerOptions');\n\n  return {\n    spacerOptions,\n    setSpacerOptions,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\n\nexport function useSpacerError() {\n  const [spacerError, setSpacerError] = useGlobalState('spacerError');\n  return {\n    spacerError,\n    setSpacerError,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n\nexport function useStep2Loading() {\n  const [step2Loading, setStep2Loading] = useGlobalState('step2Loading');\n  return {\n    step2Loading,\n    setStep2Loading,\n  };\n}\n\nexport function useStep3Loading() {\n  const [step3Loading, setStep3Loading] = useGlobalState('step3Loading');\n  return {\n    step3Loading,\n    setStep3Loading,\n  };\n}\nexport function useStep4Loading() {\n  const [step4Loading, setStep4Loading] = useGlobalState('step4Loading');\n  return {\n    step4Loading,\n    setStep4Loading,\n  };\n}\n\nexport function useStep5Loading() {\n  const [step5Loading, setStep5Loading] = useGlobalState('step5Loading');\n  return {\n    step5Loading,\n    setStep5Loading,\n  };\n}\n\nexport function useCloningStrategy() {\n  const [cloningStrategy, setCloningStrategy] = useGlobalState(\n    'cloningStrategy',\n  );\n  return {\n    cloningStrategy,\n    setCloningStrategy,\n  };\n}\n\nexport function useStep3Advanced() {\n  const [step3Advanced, setStep3Advanced] = useGlobalState('step3Advanced');\n  return {\n    step3Advanced,\n    setStep3Advanced,\n  };\n}\n\nexport function useMenuTab() {\n  const [menuTab, setMenuTab] = useGlobalState('menuTab');\n  return {\n    menuTab,\n    setMenuTab,\n  };\n}\n","import React, { SetStateAction } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { API_ROOT } from '../../config';\nimport { useMenuTab } from '../../hooks';\n\nfunction navCallback(\n  tab: string,\n  setMenuTab: (u: SetStateAction<string>) => void,\n) {\n  setMenuTab(tab);\n  // window.history.pushState(null, '', `${tab}`);\n}\n\n// function ensureLocation(\n//   menuTab: string,\n//   setMenuTab: (u: SetStateAction<string>) => void,\n// ) {\n//   const locationTab = window.document.location.pathname.replace('/', '');\n//   if (locationTab !== menuTab) {\n//     setMenuTab(locationTab);\n//   }\n// }\n\n// const IS_REGISTERED = false;\n// function registerOnPopState(\n//   menuTab: string,\n//   setMenuTab: (u: SetStateAction<string>) => void,\n// ) {\n//   if (!IS_REGISTERED) {\n//     window.onpopstate = function (event: PopStateEvent) {\n//       ensureLocation(menuTab, setMenuTab);\n//     };\n//   }\n// }\n\nconst AppMenu = () => {\n  const { menuTab, setMenuTab } = useMenuTab();\n  return (\n    <Menu\n      secondary\n      pointing\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        backgroundColor: '#f3f4f5',\n        zIndex: 2,\n        marginBottom: 0,\n        paddingLeft: 40,\n      }}\n    >\n      <Menu.Item\n        name=\"Home\"\n        active={menuTab === 'home'}\n        onClick={() => navCallback('home', setMenuTab)}\n        as=\"as\"\n      ></Menu.Item>\n      <Menu.Item\n        name=\"About\"\n        active={menuTab === 'about'}\n        onClick={() => navCallback('about', setMenuTab)}\n      ></Menu.Item>\n      <Menu.Item\n        name=\"Getting Started\"\n        active={menuTab === 'getting_started'}\n        onClick={() => navCallback('getting_started', setMenuTab)}\n      ></Menu.Item>\n    </Menu>\n  );\n};\n\nexport default AppMenu;\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n  vertical?: boolean;\n};\n\nconst onClickFactory = (step: number) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n  }\n};\n\nconst Steps = ({ step = 0, vertical = false }: Props) => (\n  <Step.Group ordered size=\"small\" vertical={vertical}>\n    <Step completed={step > 0} active={step === 0} onClick={onClickFactory(1)}>\n      <Step.Content>\n        <Step.Description>Enter Sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 1}\n      active={step === 1}\n      disabled={step < 1}\n      onClick={onClickFactory(2)}\n    >\n      <Step.Content>\n        <Step.Description>Select your spacer</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 2}\n      active={step === 2}\n      disabled={step < 2}\n      onClick={onClickFactory(3)}\n    >\n      <Step.Content>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 3}\n      active={step === 3}\n      disabled={step < 3}\n      onClick={onClickFactory(4)}\n    >\n      <Step.Content>\n        <Step.Description>Choose a PE3 sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 4}\n      active={step === 4}\n      disabled={step < 4}\n      onClick={onClickFactory(5)}\n    >\n      <Step.Content>\n        <Step.Description>Cloning strategy</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React, { Fragment, SetStateAction } from 'react';\nimport { useStep } from '../../hooks';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport AppSteps from '../AppSteps';\nimport StepsProgress from '../../components/StepsProgress';\nimport { API_ROOT } from '../../config';\n\nconst onClickFactory =\n  (step: number, setStep: (u: SetStateAction<number>) => void) => () => {\n    const target = document.getElementById(`step-${step}-container`);\n    if (target) {\n      target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n      // setStep(step - 1);\n    }\n  };\n\nconst steps = [\n  {\n    number: 1,\n    name: 'Start',\n    description: 'Enter Sequence information',\n  },\n  {\n    number: 2,\n    name: 'Spacer',\n    description: 'Select your spacer',\n  },\n  {\n    number: 3,\n    name: 'pegRNA',\n    description: 'Design your pegRNA',\n  },\n  {\n    number: 4,\n    name: 'PE3',\n    description: 'Choose a PE3 sequence',\n  },\n  {\n    number: 5,\n    name: 'Cloning',\n    description: 'Choose your cloning strategy',\n  },\n];\n\nconst SideMenu = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <div className=\"side-menu-logo-container\">\n        <img\n          alt=\"PegAssist Logo\"\n          src={`${API_ROOT}/images/pegassist_logo_r8+name.svg`}\n          className=\"side-menu-logo\"\n        />\n      </div>\n      <div className=\"side-menu-container\">\n        <div\n          style={{ display: 'flex', justifyContent: 'center', paddingLeft: 40 }}\n        >\n          <StepsProgress step={step} vertical />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nexport default SideMenu;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSpacerError } from '../../hooks';\n\nconst SpacerError = () => {\n  const { spacerError } = useSpacerError();\n\n  return (\n    <Fragment>\n      {spacerError && (\n        <Message warning>\n          <MessageHeader>Error!</MessageHeader>\n          Looks like we couldn't predict any spacers for your sequence. You can\n          set a custom spacer in the advanced options\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SpacerError;\n","import React, { Component, ChangeEvent, Fragment } from 'react';\nimport { Divider, Form, InputOnChangeData } from 'semantic-ui-react';\nimport SpacerError from './SpacerError';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  customSpacer: string;\n  pam: string;\n  minPbs: string;\n  maxPbs: string;\n  minRt: string;\n  maxRt: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) => Promise<void>;\n  loading: boolean;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    customSpacer: '',\n    pam: 'NGG',\n    minPbs: '8',\n    maxPbs: '18',\n    minRt: '9',\n    maxRt: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    } = this.state;\n    this.props.onSubmit(\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      parseInt(minPbs),\n      parseInt(maxPbs),\n      parseInt(minRt),\n      parseInt(maxRt),\n    );\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let minRt = 9;\n    let maxRt = 16;\n    if (mutLength > 4) {\n      minRt = mutLength + 6;\n      maxRt = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      minRt = mutLength + 8;\n      maxRt = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      minRt = mutLength + 10;\n      maxRt = mutLength + 30;\n    }\n    this.setState(() => ({ minRt: minRt.toString(), maxRt: maxRt.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minRt,\n      maxRt,\n      minPbs,\n      maxPbs,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <SpacerError />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          {showAdvanced && (\n            <Fragment>\n              <Divider />\n              <h3>Advanced Options</h3>\n              <Form.Input\n                label=\"Custom PE spacer sequence\"\n                placeholder=\"\"\n                name=\"customSpacer\"\n                value={customSpacer}\n                onChange={this.handleChange}\n              />\n              <Form.Group>\n                <Form.Input\n                  label=\"Min PBS length\"\n                  placeholder=\"8\"\n                  name=\"minPbs\"\n                  value={minPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max PBS length\"\n                  placeholder=\"18\"\n                  name=\"maxPbs\"\n                  value={maxPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Min RT length\"\n                  placeholder=\"8\"\n                  name=\"minRt\"\n                  value={minRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max RT length\"\n                  placeholder=\"18\"\n                  name=\"maxRt\"\n                  value={maxRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n              </Form.Group>\n              <Form.Input\n                label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                placeholder=\"NGG\"\n                name=\"pam\"\n                value={pam}\n                onChange={this.handleChange}\n                width=\"6\"\n                required\n              />\n            </Fragment>\n          )}\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={this.props.loading} primary />\n            <Form.Button\n              content={`${showAdvanced ? 'Hide' : 'Show'} Advanced Options`}\n              onClick={this.handleAdvancedToggle}\n              basic\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","export default {\n    step1: {\n        submit: \"Step1.Submit\"\n    },\n    step2: {\n        submit: \"Step2.Submit\"\n    },\n    step3: {\n        submit: \"Step3.Submit\"\n    },\n    step4: {\n        submit: \"Step4.Submit\"\n    },\n    step5: {\n        submit: \"Step5.Submit\"\n    }\n}","import React from 'react';\nimport { generateSpacers, trackEvent } from '../../api';\nimport {\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useCustomSpacer,\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep2Loading,\n  useSpacerError,\n} from '../../hooks';\nimport { SpacerOption } from '../../types/presto';\nimport Step1Form from './Step1Form';\nimport Events from '../../api/events';\n\nconst Submit = () => {\n  const { setSpacer, setSelectedSpacerOption } = useSequencePredictions();\n  const { setWtSeq } = useWtSeq();\n  const { setMut } = useMut();\n  const { setCustomSpacer } = useCustomSpacer();\n  const { setPam } = usePam();\n  const { setMinPbs } = useMinPbs();\n  const { setMaxPbs } = useMaxPbs();\n  const { setMinRt } = useMinRt();\n  const { setMaxRt } = useMaxRt();\n  const { setStep } = useStep();\n  const { spacerOptions, setSpacerOptions } = useSpacerOptions();\n  const { setStep2Loading, step2Loading } = useStep2Loading();\n  const { setSpacerError } = useSpacerError();\n\n  async function onSubmit(\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setStep2Loading(true);\n    let finalSpacerOptions: SpacerOption[] = [];\n\n    if (customSpacer !== '') {\n      setSpacer(customSpacer.toUpperCase());\n      const customSpacerOption = {\n        spacer: customSpacer.toUpperCase(),\n        cutToMut: null,\n        quality: null,\n      };\n      finalSpacerOptions = [customSpacerOption];\n      setSelectedSpacerOption(customSpacerOption);\n      setSpacerOptions([customSpacerOption]);\n    }\n\n    const apiSpacerOptions = await generateSpacers(wtSeq, mut, pam);\n    finalSpacerOptions = [\n      ...finalSpacerOptions,\n      ...spacerOptions,\n      ...apiSpacerOptions,\n    ];\n\n    if (finalSpacerOptions.length === 0) {\n      setSpacerError(true);\n      setStep2Loading(false);\n      return;\n    }\n\n    setSpacerError(false);\n\n    setSpacerOptions(finalSpacerOptions);\n    setSelectedSpacerOption(finalSpacerOptions[0]);\n\n    setWtSeq(wtSeq);\n    setMut(mut);\n    setCustomSpacer(customSpacer);\n    setSpacer(finalSpacerOptions[0].spacer);\n    setPam(pam);\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n    setStep(1);\n\n    trackEvent(Events.step1.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-2-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep2Loading(false);\n    }, 0);\n  }\n  return <Step1Form onSubmit={onSubmit} loading={step2Loading} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Segment, Grid } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step1 = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <div style={{ height: 40 }}></div>\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <div id=\"step-1-container\">\n            <Segment color={step === 0 ? 'grey' : undefined}>\n              <h2>Start</h2>\n              <Submit />\n            </Segment>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\nexport default Step1;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"field-group\">\n        <span className=\"field-label\">{this.props.title}</span>\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React, { SetStateAction } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport {\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep,\n  useStep3Loading,\n} from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst onChangeFactory = (\n  setSpacer: (u: SetStateAction<string>) => void,\n  setStep: (u: SetStateAction<number>) => void,\n  onSubmit: () => Promise<void>,\n  step: number,\n) => (sequence: string) => {\n  setSpacer(sequence);\n  if (step >= 2) {\n    setStep(1);\n    setTimeout(() => {\n      onSubmit();\n    }, 0);\n  }\n};\n\nconst Step2Form = ({ onSubmit }: Props) => {\n  const { spacerOptions } = useSpacerOptions();\n  const { setSpacer } = useSequencePredictions();\n  const { step3Loading } = useStep3Loading();\n  const { step, setStep } = useStep();\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <SequenceOptionsDropDown\n          title=\"\"\n          options={spacerOptions.map((o) => o.spacer)}\n          onChange={onChangeFactory(setSpacer, setStep, onSubmit, step)}\n        />\n        <div style={{ height: 15 }} />\n        <Form.Button content=\"Next\" loading={step3Loading} primary />\n      </Form>\n    </div>\n  );\n};\n\nexport default Step2Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useStep3Loading,\n} from '../../hooks';\nimport Step2Form from './Step2Form';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  const { wtSeq } = useWtSeq();\n  const { mut } = useMut();\n  const { spacer } = useSequencePredictions();\n  const { pam } = usePam();\n  const { minPbs } = useMinPbs();\n  const { maxPbs } = useMaxPbs();\n  const { minRt } = useMinRt();\n  const { maxRt } = useMaxRt();\n  const { setStep3Loading } = useStep3Loading();\n\n  async function onSubmit() {\n    setStep3Loading(true);\n    getCleanWtSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    getCleanMutSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    await updateSequencePredictions(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setStep(2);\n\n    trackEvent(events.step2.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-3-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep3Loading(false);\n    }, 0);\n  }\n  return <Step2Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-2-container\">\n          <Segment color={step === 1 ? 'grey' : undefined}>\n            <h2>Spacer</h2>\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\n\ntype Props = {\n  label: string;\n  value: string | number | boolean;\n};\n\nconst renderValue = (value: string | number | boolean) => {\n  if (typeof value === 'boolean') {\n    return value ? 'True' : 'False';\n  }\n  return value || null;\n};\n\nconst Statistic = ({ label, value }: Props) => (\n  <p style={{ margin: 0 }}>\n    <b>{`${label}: `}</b>\n    {renderValue(value)}\n  </p>\n);\n\nexport default Statistic;\n","import React, { Fragment } from 'react';\nimport Statistic from './Statistic';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { TemplateOption } from '../../types/presto';\n\nconst onChangeFactory = (\n  updateSelectedTemplateOption: (option: TemplateOption) => void,\n  templateOptions: TemplateOption[],\n) => (value: string) => {\n  updateSelectedTemplateOption(\n    templateOptions.find((t) => t.rt === value) || templateOptions[0],\n  );\n};\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n    selectedTemplateOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n\n  return (\n    <Fragment>\n      {templateOptions.length > 0 && (\n        <Fragment>\n          <SequenceOptionsDropDown\n            title=\"RT templates:\"\n            options={templateOptions.map((option) => option.rt)}\n            onChange={onChangeFactory(\n              updateSelectedTemplateOption,\n              templateOptions,\n            )}\n          />\n          {selectedTemplateOption && step3Advanced && (\n            <Fragment>\n              <div style={{ height: 15 }} />\n              <div>\n                {[\n                  { label: 'fhr', value: selectedTemplateOption.fhr },\n                  { label: 'fhrGC', value: selectedTemplateOption.fhrGC },\n                  {\n                    label: 'fhrLength',\n                    value: selectedTemplateOption.fhrLength,\n                  },\n                  { label: 'rtLength', value: selectedTemplateOption.rtLength },\n                  { label: 'rtPolyT', value: selectedTemplateOption.rtPolyT },\n                  { label: 'rtTM', value: selectedTemplateOption.rtTM },\n                ].map((o) => (\n                  <Statistic label={o.label} value={o.value} />\n                ))}\n              </div>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default RTTemplates;\n\n// error: string;\n// fhr: string;\n// fhrGC: number;\n// fhrLength: number;\n// isDefault: boolean;\n// rt: string;\n// rtLength: number;\n// rtPolyT: boolean;\n// rtTM: number;\n// startsWithC: boolean;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { PBSOption } from '../../types/presto';\nimport Statistic from './Statistic';\n\nconst onChangeFactory = (\n  updateSelectedPbsOption: (option: PBSOption) => void,\n  PbsOptions: PBSOption[],\n) => (value: string) => {\n  updateSelectedPbsOption(\n    PbsOptions.find((p) => p.pbs === value) || PbsOptions[0],\n  );\n};\n\nconst PBSOptions = () => {\n  const {\n    pbsOptions,\n    updateSelectedPbsOption,\n    selectedPbsOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n  return (\n    <Fragment>\n      {pbsOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"Primer binding sites:\"\n          options={pbsOptions.map((option) => option.pbs)}\n          onChange={onChangeFactory(updateSelectedPbsOption, pbsOptions)}\n        />\n      )}\n      {selectedPbsOption && step3Advanced && (\n        <Fragment>\n          <div style={{ height: 15 }} />\n          <div>\n            {[\n              { label: 'length', value: selectedPbsOption.length },\n              { label: 'pbsGC', value: selectedPbsOption.pbsGC },\n              {\n                label: 'pbsPolyT',\n                value: selectedPbsOption.pbsPolyT,\n              },\n              { label: 'pbsTM', value: selectedPbsOption.pbsTM },\n            ].map((o) => (\n              <Statistic label={o.label} value={o.value} />\n            ))}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PBSOptions;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport { useStep4Loading, useStep3Advanced } from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst handleAdvancedToggleFactory = (\n  step3Advanced: boolean,\n  setStep3Advanced: (u: React.SetStateAction<boolean>) => void,\n) => (e: any) => {\n  e.preventDefault();\n  setStep3Advanced(!step3Advanced);\n};\n\nconst Step3Form = ({ onSubmit }: Props) => {\n  const { step4Loading } = useStep4Loading();\n  const { step3Advanced, setStep3Advanced } = useStep3Advanced();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flexGrow: 1, paddingRight: '7px' }}>\n              <RTTemplates />\n            </div>\n            <div style={{ flexGrow: 1, paddingLeft: '7px' }}>\n              <PBSOptions />\n            </div>\n          </div>\n          <div style={{ height: 15 }} />\n\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={step4Loading} primary />\n            <Form.Button\n              content={`${step3Advanced ? 'Hide' : 'Show'} Details`}\n              onClick={handleAdvancedToggleFactory(\n                step3Advanced,\n                setStep3Advanced,\n              )}\n              basic\n            />\n          </Form.Group>\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step3Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useStep, useStep4Loading } from '../../hooks';\nimport Step3Form from './Step3Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep4Loading } = useStep4Loading();\n\n  async function onSubmit() {\n    setStep(3);\n    setStep4Loading(true);\n\n    trackEvent(events.step3.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-4-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n        setStep4Loading(false);\n      }\n    }, 0);\n  }\n  return <Step3Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PegRNAWarnings = () => {\n  const {\n    warnings: { general, pegRna },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pegRna];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNAWarnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport PegRNAWarnings from './PegRNAWarnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-3-container\">\n          <Segment color={step === 2 ? 'grey' : undefined}>\n            <h2>pegRNA</h2>\n            <PegRNAWarnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import { useSequencePredictions } from '../../hooks';\nimport React, { Component, Fragment, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { PE3Option } from '../../types/presto';\nimport { API_ROOT } from '../../config';\n\ntype Props = {\n  options: PE3Option[];\n  title: string;\n  onChange: (value: PE3Option) => void;\n};\n\n// class PE3OptionsDropdown extends Component<Props> {\n//   state = {\n//     value:\n//       this.props.options.length > 0\n//         ? this.props.options[0]\n//         : { secondGuide: '', type: 'pe3' },\n//   };\n//   static defaultProps = { options: [], onChange: (_: PE3Option) => {} };\n//   handleChange = (\n//     _: SyntheticEvent<HTMLElement, Event>,\n//     { value }: DropdownItemProps,\n//   ) => {\n//     const selectedOption = this.props.options.filter(\n//       (o) => o.secondGuide === value,\n//     )[0];\n//     this.setState({ value: selectedOption });\n//     this.props.onChange(selectedOption);\n//   };\n\n//   render() {\n//     const { value } = this.state;\n\n//     return (\n//       <div className=\"field-group\">\n//         {this.props.title}\n//         <Dropdown placeholder=\"Choose an option\" text={value.secondGuide}>\n//           <Dropdown.Menu scrolling onChange={this.handleChange}>\n//             {this.props.options.map((o) => (\n//               <Dropdown.Item\n//                 label={{\n//                   color: o.type === 'pe3b' ? 'green' : undefined,\n//                   content: o.type === 'pe3b' ? 'PE3B' : 'PE3',\n//                 }}\n//                 key={o.secondGuide}\n//                 text={o.secondGuide}\n//                 value={o.secondGuide}\n//                 onClick={this.handleChange}\n//               />\n//             ))}\n//           </Dropdown.Menu>\n//         </Dropdown>\n//       </div>\n//     );\n//   }\n// }\n\nclass PE3OptionsDropdownAvatar extends Component<Props> {\n  state = {\n    value:\n      this.props.options.length > 0 ? this.props.options[0].secondGuide : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    const selectedOption = this.props.options.filter(\n      (o) => o.secondGuide === value,\n    )[0];\n    this.setState({ value: selectedOption.secondGuide });\n    this.props.onChange(selectedOption);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"field-group\">\n        <span className=\"field-label\">{this.props.title}</span>\n        <Dropdown\n          placeholder=\"Choose an option\"\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o.secondGuide,\n            text: o.secondGuide,\n            value: o.secondGuide,\n            image:\n              o.type !== 'None'\n                ? {\n                    src:\n                      o.type === 'pe3'\n                        ? `${API_ROOT}/images/pe3pill.png`\n                        : `${API_ROOT}/images/pe3bpill.png`,\n                  }\n                : undefined,\n          }))}\n          value={value}\n          selection\n          scrolling\n        ></Dropdown>\n      </div>\n    );\n  }\n}\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <PE3OptionsDropdownAvatar\n          title=\"PE3 Guides:\"\n          options={pe3Options}\n          onChange={updateSelectedPe3Option}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3Options;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport { useStep5Loading } from '../../hooks';\nimport PE3Options from './PE3Options';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst Step4Form = ({ onSubmit }: Props) => {\n  const { step5Loading } = useStep5Loading();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <PE3Options />\n          <div style={{ height: 15 }} />\n          <Form.Button content=\"Next\" loading={step5Loading} primary />\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step4Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useStep, useStep5Loading } from '../../hooks';\nimport Step4Form from './Step4Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep5Loading } = useStep5Loading();\n\n  async function onSubmit() {\n    setStep(4);\n    setStep5Loading(true);\n\n    trackEvent(events.step4.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-5-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep5Loading(false);\n    }, 1000);\n  }\n  return <Step4Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst Pe3Warnings = () => {\n  const {\n    warnings: { general, pe3 },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pe3];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3Warnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport Pe3Warnings from './Pe3Warnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-4-container\">\n          <Segment color={step === 3 ? 'grey' : undefined}>\n            <h2>PE3</h2>\n            <Pe3Warnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { generateCSV, trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useSequencePredictions } from '../../hooks';\n\nconst FullResultsButton = () => {\n  const {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n  } = useSequencePredictions();\n  const handleClick = () =>\n    generateCSV(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n  trackEvent(events.step5.submit);\n  return (\n    <Button onClick={handleClick} primary>\n      Download Full Results\n    </Button>\n  );\n};\n\nexport default FullResultsButton;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string | undefined;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    if (this.props.value) {\n      copy(this.props.value);\n      this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n      console.log('indicate');\n      setTimeout(() => {\n        this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n      }, 1000);\n    }\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React, { Component, SetStateAction, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { useCloningStrategy } from '../../hooks';\n\nconst options = ['Richardson & Steyert et al. 2021', 'None'].map((o) => ({\n  key: o,\n  text: o,\n  value: o,\n}));\n\nconst handleChangeFactory = (\n  setCloningStrategy: (u: SetStateAction<string>) => void,\n) => (_: SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n  setCloningStrategy(value as string);\n};\n\nconst CloningStrategyDropdown = () => {\n  const { setCloningStrategy } = useCloningStrategy();\n  return (\n    <div className=\"field-group\">\n      <span className=\"field-label\">Cloning strategy</span>\n      <Dropdown\n        onChange={handleChangeFactory(setCloningStrategy)}\n        options={options}\n        placeholder=\"Choose an option\"\n        selection\n        scrolling\n        defaultValue={options[0].value}\n      />\n    </div>\n  );\n};\n\nexport default CloningStrategyDropdown;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { useCloningStrategy, usePegRNA } from '../../hooks';\nimport { FinalPegRNAAnnotation } from '../../types/presto';\nimport CloningStrategyDropdown from './CloningStrategyDropdown';\n\nfunction uniqBy(\n  a: Array<FinalPegRNAAnnotation>,\n  key: (o: FinalPegRNAAnnotation) => any,\n) {\n  let seen = new Set();\n  return a.filter((item) => {\n    let k = key(item);\n    return seen.has(k) ? false : seen.add(k);\n  });\n}\n\nconst getSequence = (annotations: FinalPegRNAAnnotation[]) =>\n  annotations.map((a) => a.sequence).join('');\n\nconst getCloningStrategyAnnotations = (\n  annotations: FinalPegRNAAnnotation[],\n  cloningStrategy: string,\n) =>\n  annotations.filter((a) =>\n    cloningStrategy === 'None'\n      ? ['rtt', 'pbs', 'spacer', 'cas9_scaffold'].includes(a.name)\n      : true,\n  );\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n  const { cloningStrategy } = useCloningStrategy();\n  const annotations = uniqBy(\n    getCloningStrategyAnnotations(\n      pegRNA?.annotations || ([] as FinalPegRNAAnnotation[]),\n      cloningStrategy,\n    ),\n    (a: FinalPegRNAAnnotation) => a.name,\n  );\n\n  return (\n    <Fragment>\n      <CloningStrategyDropdown />\n      {pegRNA && (\n        <div style={{ marginTop: 30 }}>\n          <div className=\"field-group\">\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              <span className=\"field-label\">Final pegRNA:</span>\n              <Copy\n                value={getSequence(\n                  getCloningStrategyAnnotations(\n                    pegRNA.annotations,\n                    cloningStrategy,\n                  ),\n                )}\n              />\n              <div style={{ display: 'flex', position: 'absolute', right: 12 }}>\n                {annotations.map((annotation) => (\n                  <div style={{ display: 'flex' }}>\n                    <div\n                      style={{\n                        width: 19,\n                        height: 19,\n                        backgroundColor: annotation.color,\n                        borderRadius: 5,\n                      }}\n                    ></div>\n                    <span style={{ marginLeft: 2, marginRight: 10 }}>\n                      {annotation.name}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <p style={{ wordBreak: 'break-word', marginTop: 10 }}>\n              {getCloningStrategyAnnotations(\n                pegRNA.annotations,\n                cloningStrategy,\n              ).map((annotation) => (\n                <span\n                  style={{\n                    backgroundColor: annotation.color,\n                    padding: '0 5px',\n                    borderRadius: 5,\n                  }}\n                >\n                  {annotation.sequence}\n                </span>\n              ))}\n            </p>\n          </div>\n          {/* <SeqViz\n            name=\"pegRNA\"\n            seq={pegRNA.sequence}\n            viewer=\"circular\"\n            annotations={annotations}\n            showComplement={false}\n            style={{ height: '300px', width: '100%' }}\n            zoom={{\n              linear: 50,\n            }}\n          /> */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport {\n  usePe3sgRNA,\n  useSequencePredictions,\n  useCloningStrategy,\n} from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3Options } = useSequencePredictions();\n  const { pe3sgRNA } = usePe3sgRNA();\n  const { selectedPe3Option } = useSequencePredictions();\n  const { cloningStrategy } = useCloningStrategy();\n\n  return (\n    <div>\n      {pe3Options.length > 0 && selectedPe3Option?.secondGuide !== 'None' && (\n        <Fragment>\n          <div style={{ flexGrow: 1 }}>\n            <div className=\"field-group\">\n              <div>\n                <span className=\"field-label\">\n                  PE3 {cloningStrategy !== 'None' ? 'sense' : ''}:\n                </span>\n                <Copy\n                  value={\n                    cloningStrategy !== 'None'\n                      ? pe3sgRNA.sense\n                      : selectedPe3Option?.secondGuide\n                  }\n                />\n              </div>\n              <p>\n                <span className=\"generic-output-sequence\">\n                  {cloningStrategy !== 'None'\n                    ? pe3sgRNA.sense\n                    : selectedPe3Option?.secondGuide}\n                </span>\n              </p>\n            </div>\n          </div>\n          {cloningStrategy !== 'None' && (\n            <div style={{ flexGrow: 1 }}>\n              <div className=\"field-group\">\n                <div>\n                  <span className=\"field-label\">PE3 antisense:</span>\n                  <Copy value={pe3sgRNA.antisense} />\n                </div>\n                <p>\n                  <span className=\"generic-output-sequence\">\n                    {pe3sgRNA.antisense}\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { useSequencePredictions, useCloningStrategy } from '../../hooks';\n\nconst SpacersgRNA = () => {\n  const {\n    spacersgRNA,\n    pe3Options,\n    selectedSpacerOption,\n  } = useSequencePredictions();\n  const { cloningStrategy } = useCloningStrategy();\n\n  return (\n    <div>\n      {pe3Options.length > 0 && (\n        <Fragment>\n          <div style={{ flexGrow: 1 }}>\n            <div className=\"field-group\">\n              <div>\n                <span className=\"field-label\">\n                  Spacer {cloningStrategy !== 'None' ? 'sense' : ''}:\n                </span>\n                <Copy\n                  value={\n                    cloningStrategy !== 'None'\n                      ? spacersgRNA.sense\n                      : selectedSpacerOption?.spacer\n                  }\n                />\n              </div>\n              <p>\n                <span className=\"spacer-output-sequence\">\n                  {cloningStrategy !== 'None'\n                    ? spacersgRNA.sense\n                    : selectedSpacerOption?.spacer}\n                </span>\n              </p>\n            </div>\n          </div>\n          {cloningStrategy !== 'None' && (\n            <div style={{ flexGrow: 1 }}>\n              <div className=\"field-group\">\n                <div>\n                  <span className=\"field-label\">Spacer antisense:</span>\n                  <Copy value={spacersgRNA.antisense} />\n                </div>\n                <p>\n                  <span className=\"spacer-output-sequence\">\n                    {spacersgRNA.antisense}\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default SpacersgRNA;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport FullResultsButton from './FullResultsButton';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\nimport SpacersgRNA from './SpacersgRNA';\n\nconst Step5 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-5-container\" style={{ marginBottom: 40 }}>\n          <Segment color={step === 4 ? 'grey' : undefined}>\n            <h2>Cloning</h2>\n            <PegRNA />\n            <div style={{ height: 15 }} />\n            <SpacersgRNA />\n            <div style={{ height: 15 }} />\n            <Pe3sgRNA />\n            <div style={{ height: 15 }} />\n            <FullResultsButton />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step5;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nconst AboutContent = () => (\n  <div className=\"static-content-container\">\n    <h2 className=\"static-header\">About Pegassist.app</h2>\n    <p>\n      Pegassist (v 0.8 beta) is a web app to design prime editing guide RNA\n      (pegRNA) for genome editing with Cas9 nickase–reverse transcriptase\n      fusions previously described by Liu and colleagues (Anzalone et al. Nature\n      2019).\n    </p>\n\n    <h3 className=\"static-header\">Instructions</h3>\n    <p>\n      Give Pegassist your target genomic sequence and the edits you want to\n      introduce. The app will propose sequences for a Prime Editing strategy,\n      along with a cloning strategy to build these reagents using the Pegassist\n      plasmid set (available soon on Addgene) developed by Richardson, Steyert,\n      et al. 2021 in prep or those developed by Anzalone et al. 2019.\n    </p>\n    <p>\n      You can keep the default options, or choose to look under the hood using\n      Advanced Options to tweak parameters. Bear in mind, Prime Editing is an\n      evolving technology, and this app is in beta. Pegassist outputs are based\n      on available performance data as of January 2021 and may require\n      experimental validation.\n    </p>\n\n    <h3 className=\"static-header\">Copyright and Citation</h3>\n    <p>\n      All copyright is exclusively owned by the University of Maryland.\n      Pegassist is free for non-profit and academic research. All commercial\n      rights are reserved. If you use this software for reagent generation in a\n      publication, please cite:\n    </p>\n\n    <h3 className=\"static-header\">Support</h3>\n    <p>\n      This work is supported by The Department of Pharmacology, University of\n      Maryland School of Medicine; The National Cancer Institute (T32CA154274),\n      and The National Institutes of Health High-Risk, High-Reward Research\n      Program (DP2MH122398).\n    </p>\n\n    <h3 className=\"static-header\">Development team: Poulopoulos Lab</h3>\n    <p>\n      Prime editing:{' '}\n      <a href=\"https://www.linkedin.com/in/ryanr-richardson/\">\n        Ryan R. Richardson\n      </a>\n      ,{' '}\n      <a href=\"https://www.linkedin.com/in/marilyn-steyert-ba617a142/\">\n        Marilyn Steyert\n      </a>\n      ,{' '}\n      <a href=\"https://www.linkedin.com/in/colin-robertson-5b0a37b4/\">\n        Colin Robertson\n      </a>\n    </p>\n    <p>\n      Python code:{' '}\n      <a href=\"https://www.linkedin.com/in/marilyn-steyert-ba617a142/\">\n        Marilyn Steyert\n      </a>\n    </p>\n    <p>\n      Web app: <a href=\"https://www.linkedin.com/in/flynncorey/\">Corey Flynn</a>\n    </p>\n    <p>\n      User interface & design:{' '}\n      <a href=\"https://www.linkedin.com/in/-jeff-smith/\">Jeff Smith</a>,{' '}\n      <a href=\"https://www.linkedin.com/in/cheryl-brandenburg-1a7a2a64/\">\n        Cheryl Brandenburg\n      </a>\n    </p>\n\n    <h3 className=\"static-header\">Links</h3>\n    <a href=\"http://poulab.org/\">Poulopoulos Lab</a>\n  </div>\n);\n\nconst AboutContainer = () => (\n  <Grid>\n    <div style={{ height: 40 }}></div>\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <AboutContent />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\nexport default AboutContainer;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { API_ROOT } from '../../config';\n\nconst GettingStartedContent = () => (\n  <div className=\"static-content-container\">\n    <h2 className=\"static-header\">Getting Started</h2>\n    <p>\n      PegAssist requires minimal user effort to design prime editing guide RNA\n      (pegRNA) and associated PE3/PE3b guides to improve efficiency and\n      precision of genome editing.\n    </p>\n\n    <h3 className=\"static-header\">PegAssist needs from you:</h3>\n    <ul>\n      <li>\n        The wildtype gene sequence (include ~100 base pairs on each side of the\n        desired edit) with parentheses around the region you wish to edit\n      </li>\n      <li>The desired edit for the region in parentheses</li>\n      <li>\n        <i>For some:</i> PegAssist will attempt to design a spacer, but some\n        genes will have PAM sites distant from the desired edit. These spacers\n        are less efficient and are not detected by PegAssist. These genes will\n        require a specified spacer sequence to direct the Cas9 nickase. Be sure\n        the cut site for this spacer is 5’ of the region of interest\n      </li>\n      <li>\n        <i>Advanced Options:</i> The default values for PBS and RT length are\n        based on current data on editing efficiency, but this option is\n        available to edit. The protospacer adjacent motif (PAM) sequence “NGG”\n        is the default for use with Streptococcus pyrogenes Cas9 (SpCas9). If\n        you are using a different Cas9, the PAM sequence may be adjusted with\n        IUPAC ambiguity letters. Acceptable characters are “ATGCMRWSYKVHDBN”\n      </li>\n    </ul>\n\n    <h3 className=\"static-header\">Examples of user input:</h3>\n\n    <p>To design a point mutation (Ex: G&#8594;A)</p>\n    <img\n      className=\"static-image\"\n      alt=\"getting started step 1\"\n      src={`${API_ROOT}/images/gettingStarted1.png`}\n    />\n\n    <div className=\"static-spacer\"></div>\n    <p>\n      To design a 1 base pair <b>deletion</b>\n    </p>\n    <img\n      className=\"static-image\"\n      alt=\"getting started step 2\"\n      src={`${API_ROOT}/images/gettingStarted2.png`}\n    />\n\n    <div className=\"static-spacer\"></div>\n    <p>\n      To design a 1 base pair <b>insertion</b>\n    </p>\n    <img\n      className=\"static-image\"\n      alt=\"getting started step 3\"\n      src={`${API_ROOT}/images/gettingStarted3.png`}\n    />\n\n    <h3 className=\"static-header\">User Selections</h3>\n    <p>\n      Prime editing is still a new technology, and the available information on\n      optimal pegRNA design is limited. The default selections and outputs on\n      PegAssist are based on current performance data. All available options are\n      provided in case you would like to make a specific selection. Be sure to\n      follow the warnings and comments when selecting components to avoid low\n      efficiency editing\n    </p>\n\n    <h3 className=\"static-header\">Support</h3>\n    <p>\n      This work is supported by The Department of Pharmacology, University of\n      Maryland School of Medicine; The National Cancer Institute (T32CA154274),\n      and The National Institutes of Health High-Risk, High-Reward Research\n      Program (DP2MH122398).\n    </p>\n\n    <h3 className=\"static-header\">Ouput</h3>\n    <p>\n      PegAssist will display the final pegRNA sequence with annotations to aid\n      in cloning. For more information on the cloning steps involved, see\n      Richardson & Steyert et al. 2021.\n    </p>\n\n    <h3 className=\"static-header\">Terms</h3>\n    <p>\n      <b>pegRNA – </b>The prime editing guide RNA (pegRNA) is the full assembly\n      of the spacer, a Cas9 scaffold, a PBS, and an RTT. This will guide the\n      Cas9-Reverse Transcriptase fusion protein to your region of interest to\n      produce the desired edit.\n    </p>\n    <p>\n      <b>Spacer – </b>A region of homology that guides Cas9 to a specific\n      genomic location. In standard CRISPR applications, this component on a\n      scaffold would make up the gRNA. In prime editing the spacer will guide\n      Cas9 nickase to cut the opposing strand.\n    </p>\n    <p>\n      <b>PBS – </b>The primer binding site is a second region of homology which\n      binds the strand opposite the spacer. This will position the RTT for\n      extension.\n    </p>\n    <p>\n      <b>RTT/RT Template – </b>The reverse transcriptase template contains the\n      desired edit and some amount of RNA homologous to the target region.\n      Reverse transcriptase will generate a 3’ extension of the gDNA bound to\n      the PBS based on the RTT sequence.\n    </p>\n    <p>\n      <b>PE3/PE3b guide – </b> A second guide RNA that directs Cas9 nickase to\n      cut the unedited gDNA strand and improve editing efficiency. This will\n      bias the mismatch repair mechanism to preferentially retain the edited\n      DNA. PE3 guides make this cut further from the edited region than PE3b\n      guides and are less likely to create this bias.\n    </p>\n  </div>\n);\n\nconst AboutContainer = () => (\n  <Grid>\n    <div style={{ height: 40 }}></div>\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <GettingStartedContent />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\nexport default AboutContainer;\n","import React, { Fragment } from 'react';\nimport AppMenu from './AppMenu';\nimport SideMenu from './SideMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep, useMenuTab } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport About from './About';\nimport GettingStarted from './GettingStarted';\n\nfunction App() {\n  const { step } = useStep();\n  const { menuTab } = useMenuTab();\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <AppMenu />\n      {menuTab === 'home' && (\n        <Fragment>\n          <SideMenu />\n          <div className=\"main-content-container\">\n            <Grid centered>\n              <Step1 />\n              {step >= 1 && <Step2 />}\n              {step >= 2 && <Step3 />}\n              {step >= 3 && <Step4 />}\n              {step >= 4 && <Step5 />}\n            </Grid>\n          </div>\n        </Fragment>\n      )}\n      {menuTab === 'about' && <About />}\n      {menuTab === 'getting_started' && <GettingStarted />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}